// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: packets.proto

package packets

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Playback int32

const (
	Playback_UNSPECIFIED     Playback = 0
	Playback_INTERACTION     Playback = 1
	Playback_INTERACTION_END Playback = 2
	Playback_UTTERANCE       Playback = 3
)

// Enum value maps for Playback.
var (
	Playback_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "INTERACTION",
		2: "INTERACTION_END",
		3: "UTTERANCE",
	}
	Playback_value = map[string]int32{
		"UNSPECIFIED":     0,
		"INTERACTION":     1,
		"INTERACTION_END": 2,
		"UTTERANCE":       3,
	}
)

func (x Playback) Enum() *Playback {
	p := new(Playback)
	*p = x
	return p
}

func (x Playback) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Playback) Descriptor() protoreflect.EnumDescriptor {
	return file_packets_proto_enumTypes[0].Descriptor()
}

func (Playback) Type() protoreflect.EnumType {
	return &file_packets_proto_enumTypes[0]
}

func (x Playback) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Playback.Descriptor instead.
func (Playback) EnumDescriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{0}
}

type Actor_Type int32

const (
	Actor_UNKNOWN Actor_Type = 0
	Actor_PLAYER  Actor_Type = 1
	Actor_AGENT   Actor_Type = 2
)

// Enum value maps for Actor_Type.
var (
	Actor_Type_name = map[int32]string{
		0: "UNKNOWN",
		1: "PLAYER",
		2: "AGENT",
	}
	Actor_Type_value = map[string]int32{
		"UNKNOWN": 0,
		"PLAYER":  1,
		"AGENT":   2,
	}
)

func (x Actor_Type) Enum() *Actor_Type {
	p := new(Actor_Type)
	*p = x
	return p
}

func (x Actor_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Actor_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_packets_proto_enumTypes[1].Descriptor()
}

func (Actor_Type) Type() protoreflect.EnumType {
	return &file_packets_proto_enumTypes[1]
}

func (x Actor_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Actor_Type.Descriptor instead.
func (Actor_Type) EnumDescriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{0, 0}
}

type TextEvent_SourceType int32

const (
	TextEvent_UNKNOWN        TextEvent_SourceType = 0
	TextEvent_SPEECH_TO_TEXT TextEvent_SourceType = 1
	TextEvent_TYPED_IN       TextEvent_SourceType = 2
	TextEvent_GENERATED      TextEvent_SourceType = 3
	TextEvent_FILLER         TextEvent_SourceType = 4
)

// Enum value maps for TextEvent_SourceType.
var (
	TextEvent_SourceType_name = map[int32]string{
		0: "UNKNOWN",
		1: "SPEECH_TO_TEXT",
		2: "TYPED_IN",
		3: "GENERATED",
		4: "FILLER",
	}
	TextEvent_SourceType_value = map[string]int32{
		"UNKNOWN":        0,
		"SPEECH_TO_TEXT": 1,
		"TYPED_IN":       2,
		"GENERATED":      3,
		"FILLER":         4,
	}
)

func (x TextEvent_SourceType) Enum() *TextEvent_SourceType {
	p := new(TextEvent_SourceType)
	*p = x
	return p
}

func (x TextEvent_SourceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TextEvent_SourceType) Descriptor() protoreflect.EnumDescriptor {
	return file_packets_proto_enumTypes[2].Descriptor()
}

func (TextEvent_SourceType) Type() protoreflect.EnumType {
	return &file_packets_proto_enumTypes[2]
}

func (x TextEvent_SourceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TextEvent_SourceType.Descriptor instead.
func (TextEvent_SourceType) EnumDescriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{4, 0}
}

type ControlEvent_Action int32

const (
	ControlEvent_UNKNOWN             ControlEvent_Action = 0
	ControlEvent_AUDIO_SESSION_START ControlEvent_Action = 1
	ControlEvent_AUDIO_SESSION_END   ControlEvent_Action = 2
	ControlEvent_INTERACTION_END     ControlEvent_Action = 3
	ControlEvent_TTS_PLAYBACK_START  ControlEvent_Action = 4
	ControlEvent_TTS_PLAYBACK_END    ControlEvent_Action = 5
	ControlEvent_TTS_PLAYBACK_MUTE   ControlEvent_Action = 6
	ControlEvent_TTS_PLAYBACK_UNMUTE ControlEvent_Action = 7
	ControlEvent_WARNING             ControlEvent_Action = 8
	ControlEvent_SESSION_END         ControlEvent_Action = 9
)

// Enum value maps for ControlEvent_Action.
var (
	ControlEvent_Action_name = map[int32]string{
		0: "UNKNOWN",
		1: "AUDIO_SESSION_START",
		2: "AUDIO_SESSION_END",
		3: "INTERACTION_END",
		4: "TTS_PLAYBACK_START",
		5: "TTS_PLAYBACK_END",
		6: "TTS_PLAYBACK_MUTE",
		7: "TTS_PLAYBACK_UNMUTE",
		8: "WARNING",
		9: "SESSION_END",
	}
	ControlEvent_Action_value = map[string]int32{
		"UNKNOWN":             0,
		"AUDIO_SESSION_START": 1,
		"AUDIO_SESSION_END":   2,
		"INTERACTION_END":     3,
		"TTS_PLAYBACK_START":  4,
		"TTS_PLAYBACK_END":    5,
		"TTS_PLAYBACK_MUTE":   6,
		"TTS_PLAYBACK_UNMUTE": 7,
		"WARNING":             8,
		"SESSION_END":         9,
	}
)

func (x ControlEvent_Action) Enum() *ControlEvent_Action {
	p := new(ControlEvent_Action)
	*p = x
	return p
}

func (x ControlEvent_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ControlEvent_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_packets_proto_enumTypes[3].Descriptor()
}

func (ControlEvent_Action) Type() protoreflect.EnumType {
	return &file_packets_proto_enumTypes[3]
}

func (x ControlEvent_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ControlEvent_Action.Descriptor instead.
func (ControlEvent_Action) EnumDescriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{5, 0}
}

type GestureEvent_Type int32

const (
	GestureEvent_GREETING     GestureEvent_Type = 0
	GestureEvent_FAREWELL     GestureEvent_Type = 1
	GestureEvent_AGREEMENT    GestureEvent_Type = 2
	GestureEvent_DISAGREEMENT GestureEvent_Type = 3
	GestureEvent_GRATITUDE    GestureEvent_Type = 4
	GestureEvent_CELEBRATION  GestureEvent_Type = 5
	GestureEvent_BOREDOM      GestureEvent_Type = 6
	GestureEvent_UNCERTAINTY  GestureEvent_Type = 7
)

// Enum value maps for GestureEvent_Type.
var (
	GestureEvent_Type_name = map[int32]string{
		0: "GREETING",
		1: "FAREWELL",
		2: "AGREEMENT",
		3: "DISAGREEMENT",
		4: "GRATITUDE",
		5: "CELEBRATION",
		6: "BOREDOM",
		7: "UNCERTAINTY",
	}
	GestureEvent_Type_value = map[string]int32{
		"GREETING":     0,
		"FAREWELL":     1,
		"AGREEMENT":    2,
		"DISAGREEMENT": 3,
		"GRATITUDE":    4,
		"CELEBRATION":  5,
		"BOREDOM":      6,
		"UNCERTAINTY":  7,
	}
)

func (x GestureEvent_Type) Enum() *GestureEvent_Type {
	p := new(GestureEvent_Type)
	*p = x
	return p
}

func (x GestureEvent_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GestureEvent_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_packets_proto_enumTypes[4].Descriptor()
}

func (GestureEvent_Type) Type() protoreflect.EnumType {
	return &file_packets_proto_enumTypes[4]
}

func (x GestureEvent_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GestureEvent_Type.Descriptor instead.
func (GestureEvent_Type) EnumDescriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{7, 0}
}

type EmotionEvent_SpaffCode int32

const (
	EmotionEvent_NEUTRAL       EmotionEvent_SpaffCode = 0
	EmotionEvent_DISGUST       EmotionEvent_SpaffCode = 1
	EmotionEvent_CONTEMPT      EmotionEvent_SpaffCode = 2
	EmotionEvent_BELLIGERENCE  EmotionEvent_SpaffCode = 3
	EmotionEvent_DOMINEERING   EmotionEvent_SpaffCode = 4
	EmotionEvent_CRITICISM     EmotionEvent_SpaffCode = 5
	EmotionEvent_ANGER         EmotionEvent_SpaffCode = 6
	EmotionEvent_TENSION       EmotionEvent_SpaffCode = 7
	EmotionEvent_TENSE_HUMOR   EmotionEvent_SpaffCode = 8
	EmotionEvent_DEFENSIVENESS EmotionEvent_SpaffCode = 9
	EmotionEvent_WHINING       EmotionEvent_SpaffCode = 10
	EmotionEvent_SADNESS       EmotionEvent_SpaffCode = 11
	EmotionEvent_STONEWALLING  EmotionEvent_SpaffCode = 12
	EmotionEvent_INTEREST      EmotionEvent_SpaffCode = 13
	EmotionEvent_VALIDATION    EmotionEvent_SpaffCode = 14
	EmotionEvent_AFFECTION     EmotionEvent_SpaffCode = 15
	EmotionEvent_HUMOR         EmotionEvent_SpaffCode = 16
	EmotionEvent_SURPRISE      EmotionEvent_SpaffCode = 17
	EmotionEvent_JOY           EmotionEvent_SpaffCode = 18
)

// Enum value maps for EmotionEvent_SpaffCode.
var (
	EmotionEvent_SpaffCode_name = map[int32]string{
		0:  "NEUTRAL",
		1:  "DISGUST",
		2:  "CONTEMPT",
		3:  "BELLIGERENCE",
		4:  "DOMINEERING",
		5:  "CRITICISM",
		6:  "ANGER",
		7:  "TENSION",
		8:  "TENSE_HUMOR",
		9:  "DEFENSIVENESS",
		10: "WHINING",
		11: "SADNESS",
		12: "STONEWALLING",
		13: "INTEREST",
		14: "VALIDATION",
		15: "AFFECTION",
		16: "HUMOR",
		17: "SURPRISE",
		18: "JOY",
	}
	EmotionEvent_SpaffCode_value = map[string]int32{
		"NEUTRAL":       0,
		"DISGUST":       1,
		"CONTEMPT":      2,
		"BELLIGERENCE":  3,
		"DOMINEERING":   4,
		"CRITICISM":     5,
		"ANGER":         6,
		"TENSION":       7,
		"TENSE_HUMOR":   8,
		"DEFENSIVENESS": 9,
		"WHINING":       10,
		"SADNESS":       11,
		"STONEWALLING":  12,
		"INTEREST":      13,
		"VALIDATION":    14,
		"AFFECTION":     15,
		"HUMOR":         16,
		"SURPRISE":      17,
		"JOY":           18,
	}
)

func (x EmotionEvent_SpaffCode) Enum() *EmotionEvent_SpaffCode {
	p := new(EmotionEvent_SpaffCode)
	*p = x
	return p
}

func (x EmotionEvent_SpaffCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EmotionEvent_SpaffCode) Descriptor() protoreflect.EnumDescriptor {
	return file_packets_proto_enumTypes[5].Descriptor()
}

func (EmotionEvent_SpaffCode) Type() protoreflect.EnumType {
	return &file_packets_proto_enumTypes[5]
}

func (x EmotionEvent_SpaffCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EmotionEvent_SpaffCode.Descriptor instead.
func (EmotionEvent_SpaffCode) EnumDescriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{10, 0}
}

type EmotionEvent_Strength int32

const (
	EmotionEvent_UNSPECIFIED EmotionEvent_Strength = 0
	EmotionEvent_WEAK        EmotionEvent_Strength = 1
	EmotionEvent_STRONG      EmotionEvent_Strength = 2
	EmotionEvent_NORMAL      EmotionEvent_Strength = 3
)

// Enum value maps for EmotionEvent_Strength.
var (
	EmotionEvent_Strength_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "WEAK",
		2: "STRONG",
		3: "NORMAL",
	}
	EmotionEvent_Strength_value = map[string]int32{
		"UNSPECIFIED": 0,
		"WEAK":        1,
		"STRONG":      2,
		"NORMAL":      3,
	}
)

func (x EmotionEvent_Strength) Enum() *EmotionEvent_Strength {
	p := new(EmotionEvent_Strength)
	*p = x
	return p
}

func (x EmotionEvent_Strength) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EmotionEvent_Strength) Descriptor() protoreflect.EnumDescriptor {
	return file_packets_proto_enumTypes[6].Descriptor()
}

func (EmotionEvent_Strength) Type() protoreflect.EnumType {
	return &file_packets_proto_enumTypes[6]
}

func (x EmotionEvent_Strength) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EmotionEvent_Strength.Descriptor instead.
func (EmotionEvent_Strength) EnumDescriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{10, 1}
}

type DataChunk_DataType int32

const (
	DataChunk_UNSPECIFIED DataChunk_DataType = 0
	DataChunk_AUDIO       DataChunk_DataType = 1
	DataChunk_ANIMATION   DataChunk_DataType = 2
	DataChunk_SILENCE     DataChunk_DataType = 3
	DataChunk_STATE       DataChunk_DataType = 4
)

// Enum value maps for DataChunk_DataType.
var (
	DataChunk_DataType_name = map[int32]string{
		0: "UNSPECIFIED",
		1: "AUDIO",
		2: "ANIMATION",
		3: "SILENCE",
		4: "STATE",
	}
	DataChunk_DataType_value = map[string]int32{
		"UNSPECIFIED": 0,
		"AUDIO":       1,
		"ANIMATION":   2,
		"SILENCE":     3,
		"STATE":       4,
	}
)

func (x DataChunk_DataType) Enum() *DataChunk_DataType {
	p := new(DataChunk_DataType)
	*p = x
	return p
}

func (x DataChunk_DataType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DataChunk_DataType) Descriptor() protoreflect.EnumDescriptor {
	return file_packets_proto_enumTypes[7].Descriptor()
}

func (DataChunk_DataType) Type() protoreflect.EnumType {
	return &file_packets_proto_enumTypes[7]
}

func (x DataChunk_DataType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DataChunk_DataType.Descriptor instead.
func (DataChunk_DataType) EnumDescriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{11, 0}
}

type Actor struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type Actor_Type `protobuf:"varint,1,opt,name=type,proto3,enum=ai.inworld.packets.Actor_Type" json:"type,omitempty"`
	Name string     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *Actor) Reset() {
	*x = Actor{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Actor) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Actor) ProtoMessage() {}

func (x *Actor) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Actor.ProtoReflect.Descriptor instead.
func (*Actor) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{0}
}

func (x *Actor) GetType() Actor_Type {
	if x != nil {
		return x.Type
	}
	return Actor_UNKNOWN
}

func (x *Actor) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type Routing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source *Actor `protobuf:"bytes,1,opt,name=source,proto3,oneof" json:"source,omitempty"`
	Target *Actor `protobuf:"bytes,2,opt,name=target,proto3,oneof" json:"target,omitempty"`
}

func (x *Routing) Reset() {
	*x = Routing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Routing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Routing) ProtoMessage() {}

func (x *Routing) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Routing.ProtoReflect.Descriptor instead.
func (*Routing) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{1}
}

func (x *Routing) GetSource() *Actor {
	if x != nil {
		return x.Source
	}
	return nil
}

func (x *Routing) GetTarget() *Actor {
	if x != nil {
		return x.Target
	}
	return nil
}

type PacketId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketId      string `protobuf:"bytes,1,opt,name=packetId,proto3" json:"packetId,omitempty"`
	UtteranceId   string `protobuf:"bytes,2,opt,name=utteranceId,proto3" json:"utteranceId,omitempty"`
	InteractionId string `protobuf:"bytes,3,opt,name=interactionId,proto3" json:"interactionId,omitempty"`
}

func (x *PacketId) Reset() {
	*x = PacketId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PacketId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PacketId) ProtoMessage() {}

func (x *PacketId) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PacketId.ProtoReflect.Descriptor instead.
func (*PacketId) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{2}
}

func (x *PacketId) GetPacketId() string {
	if x != nil {
		return x.PacketId
	}
	return ""
}

func (x *PacketId) GetUtteranceId() string {
	if x != nil {
		return x.UtteranceId
	}
	return ""
}

func (x *PacketId) GetInteractionId() string {
	if x != nil {
		return x.InteractionId
	}
	return ""
}

type InworldPacket struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp   *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3,oneof" json:"timestamp,omitempty"`
	Routing     *Routing               `protobuf:"bytes,6,opt,name=routing,proto3,oneof" json:"routing,omitempty"`
	OldPacketId string                 `protobuf:"bytes,7,opt,name=oldPacketId,proto3" json:"oldPacketId,omitempty"`
	PacketId    *PacketId              `protobuf:"bytes,9,opt,name=packetId,proto3,oneof" json:"packetId,omitempty"`
	// Types that are assignable to Packet:
	//
	//	*InworldPacket_Text
	//	*InworldPacket_Control
	//	*InworldPacket_AudioChunk
	//	*InworldPacket_Gesture
	//	*InworldPacket_Custom
	//	*InworldPacket_Cancelresponses
	//	*InworldPacket_Emotion
	//	*InworldPacket_DataChunk
	//	*InworldPacket_Action
	//	*InworldPacket_Mutation
	//	*InworldPacket_LoadSceneOutput
	Packet isInworldPacket_Packet `protobuf_oneof:"Packet"`
}

func (x *InworldPacket) Reset() {
	*x = InworldPacket{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InworldPacket) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InworldPacket) ProtoMessage() {}

func (x *InworldPacket) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InworldPacket.ProtoReflect.Descriptor instead.
func (*InworldPacket) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{3}
}

func (x *InworldPacket) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *InworldPacket) GetRouting() *Routing {
	if x != nil {
		return x.Routing
	}
	return nil
}

func (x *InworldPacket) GetOldPacketId() string {
	if x != nil {
		return x.OldPacketId
	}
	return ""
}

func (x *InworldPacket) GetPacketId() *PacketId {
	if x != nil {
		return x.PacketId
	}
	return nil
}

func (m *InworldPacket) GetPacket() isInworldPacket_Packet {
	if m != nil {
		return m.Packet
	}
	return nil
}

func (x *InworldPacket) GetText() *TextEvent {
	if x, ok := x.GetPacket().(*InworldPacket_Text); ok {
		return x.Text
	}
	return nil
}

func (x *InworldPacket) GetControl() *ControlEvent {
	if x, ok := x.GetPacket().(*InworldPacket_Control); ok {
		return x.Control
	}
	return nil
}

func (x *InworldPacket) GetAudioChunk() *AudioChunk {
	if x, ok := x.GetPacket().(*InworldPacket_AudioChunk); ok {
		return x.AudioChunk
	}
	return nil
}

func (x *InworldPacket) GetGesture() *GestureEvent {
	if x, ok := x.GetPacket().(*InworldPacket_Gesture); ok {
		return x.Gesture
	}
	return nil
}

func (x *InworldPacket) GetCustom() *CustomEvent {
	if x, ok := x.GetPacket().(*InworldPacket_Custom); ok {
		return x.Custom
	}
	return nil
}

func (x *InworldPacket) GetCancelresponses() *CancelResponsesEvent {
	if x, ok := x.GetPacket().(*InworldPacket_Cancelresponses); ok {
		return x.Cancelresponses
	}
	return nil
}

func (x *InworldPacket) GetEmotion() *EmotionEvent {
	if x, ok := x.GetPacket().(*InworldPacket_Emotion); ok {
		return x.Emotion
	}
	return nil
}

func (x *InworldPacket) GetDataChunk() *DataChunk {
	if x, ok := x.GetPacket().(*InworldPacket_DataChunk); ok {
		return x.DataChunk
	}
	return nil
}

func (x *InworldPacket) GetAction() *ActionEvent {
	if x, ok := x.GetPacket().(*InworldPacket_Action); ok {
		return x.Action
	}
	return nil
}

func (x *InworldPacket) GetMutation() *MutationEvent {
	if x, ok := x.GetPacket().(*InworldPacket_Mutation); ok {
		return x.Mutation
	}
	return nil
}

func (x *InworldPacket) GetLoadSceneOutput() *LoadSceneOutputEvent {
	if x, ok := x.GetPacket().(*InworldPacket_LoadSceneOutput); ok {
		return x.LoadSceneOutput
	}
	return nil
}

type isInworldPacket_Packet interface {
	isInworldPacket_Packet()
}

type InworldPacket_Text struct {
	Text *TextEvent `protobuf:"bytes,2,opt,name=text,proto3,oneof"`
}

type InworldPacket_Control struct {
	Control *ControlEvent `protobuf:"bytes,3,opt,name=control,proto3,oneof"`
}

type InworldPacket_AudioChunk struct {
	AudioChunk *AudioChunk `protobuf:"bytes,4,opt,name=audioChunk,proto3,oneof"`
}

type InworldPacket_Gesture struct {
	Gesture *GestureEvent `protobuf:"bytes,5,opt,name=gesture,proto3,oneof"`
}

type InworldPacket_Custom struct {
	Custom *CustomEvent `protobuf:"bytes,8,opt,name=custom,proto3,oneof"`
}

type InworldPacket_Cancelresponses struct {
	Cancelresponses *CancelResponsesEvent `protobuf:"bytes,10,opt,name=cancelresponses,proto3,oneof"`
}

type InworldPacket_Emotion struct {
	Emotion *EmotionEvent `protobuf:"bytes,11,opt,name=emotion,proto3,oneof"`
}

type InworldPacket_DataChunk struct {
	DataChunk *DataChunk `protobuf:"bytes,12,opt,name=dataChunk,proto3,oneof"`
}

type InworldPacket_Action struct {
	Action *ActionEvent `protobuf:"bytes,13,opt,name=action,proto3,oneof"`
}

type InworldPacket_Mutation struct {
	Mutation *MutationEvent `protobuf:"bytes,15,opt,name=mutation,proto3,oneof"`
}

type InworldPacket_LoadSceneOutput struct {
	LoadSceneOutput *LoadSceneOutputEvent `protobuf:"bytes,16,opt,name=loadSceneOutput,proto3,oneof"`
}

func (*InworldPacket_Text) isInworldPacket_Packet() {}

func (*InworldPacket_Control) isInworldPacket_Packet() {}

func (*InworldPacket_AudioChunk) isInworldPacket_Packet() {}

func (*InworldPacket_Gesture) isInworldPacket_Packet() {}

func (*InworldPacket_Custom) isInworldPacket_Packet() {}

func (*InworldPacket_Cancelresponses) isInworldPacket_Packet() {}

func (*InworldPacket_Emotion) isInworldPacket_Packet() {}

func (*InworldPacket_DataChunk) isInworldPacket_Packet() {}

func (*InworldPacket_Action) isInworldPacket_Packet() {}

func (*InworldPacket_Mutation) isInworldPacket_Packet() {}

func (*InworldPacket_LoadSceneOutput) isInworldPacket_Packet() {}

type TextEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text       string               `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	SourceType TextEvent_SourceType `protobuf:"varint,2,opt,name=sourceType,proto3,enum=ai.inworld.packets.TextEvent_SourceType" json:"sourceType,omitempty"`
	PbFinal    bool                 `protobuf:"varint,3,opt,name=pb_final,json=pbFinal,proto3" json:"pb_final,omitempty"`
}

func (x *TextEvent) Reset() {
	*x = TextEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextEvent) ProtoMessage() {}

func (x *TextEvent) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextEvent.ProtoReflect.Descriptor instead.
func (*TextEvent) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{4}
}

func (x *TextEvent) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *TextEvent) GetSourceType() TextEvent_SourceType {
	if x != nil {
		return x.SourceType
	}
	return TextEvent_UNKNOWN
}

func (x *TextEvent) GetPbFinal() bool {
	if x != nil {
		return x.PbFinal
	}
	return false
}

type ControlEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action      ControlEvent_Action `protobuf:"varint,1,opt,name=action,proto3,enum=ai.inworld.packets.ControlEvent_Action" json:"action,omitempty"`
	Description string              `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Payload     *structpb.Struct    `protobuf:"bytes,3,opt,name=payload,proto3,oneof" json:"payload,omitempty"`
}

func (x *ControlEvent) Reset() {
	*x = ControlEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ControlEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ControlEvent) ProtoMessage() {}

func (x *ControlEvent) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ControlEvent.ProtoReflect.Descriptor instead.
func (*ControlEvent) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{5}
}

func (x *ControlEvent) GetAction() ControlEvent_Action {
	if x != nil {
		return x.Action
	}
	return ControlEvent_UNKNOWN
}

func (x *ControlEvent) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ControlEvent) GetPayload() *structpb.Struct {
	if x != nil {
		return x.Payload
	}
	return nil
}

type AudioChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chunk []byte `protobuf:"bytes,1,opt,name=chunk,proto3" json:"chunk,omitempty"`
}

func (x *AudioChunk) Reset() {
	*x = AudioChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioChunk) ProtoMessage() {}

func (x *AudioChunk) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioChunk.ProtoReflect.Descriptor instead.
func (*AudioChunk) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{6}
}

func (x *AudioChunk) GetChunk() []byte {
	if x != nil {
		return x.Chunk
	}
	return nil
}

type GestureEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     GestureEvent_Type `protobuf:"varint,1,opt,name=type,proto3,enum=ai.inworld.packets.GestureEvent_Type" json:"type,omitempty"`
	Playback Playback          `protobuf:"varint,2,opt,name=playback,proto3,enum=ai.inworld.packets.Playback" json:"playback,omitempty"`
}

func (x *GestureEvent) Reset() {
	*x = GestureEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GestureEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GestureEvent) ProtoMessage() {}

func (x *GestureEvent) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GestureEvent.ProtoReflect.Descriptor instead.
func (*GestureEvent) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{7}
}

func (x *GestureEvent) GetType() GestureEvent_Type {
	if x != nil {
		return x.Type
	}
	return GestureEvent_GREETING
}

func (x *GestureEvent) GetPlayback() Playback {
	if x != nil {
		return x.Playback
	}
	return Playback_UNSPECIFIED
}

type CustomEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string                   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Playback       Playback                 `protobuf:"varint,2,opt,name=playback,proto3,enum=ai.inworld.packets.Playback" json:"playback,omitempty"`
	ParametersList []*CustomEvent_Parameter `protobuf:"bytes,3,rep,name=parametersList,proto3" json:"parametersList,omitempty"`
}

func (x *CustomEvent) Reset() {
	*x = CustomEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomEvent) ProtoMessage() {}

func (x *CustomEvent) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomEvent.ProtoReflect.Descriptor instead.
func (*CustomEvent) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{8}
}

func (x *CustomEvent) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CustomEvent) GetPlayback() Playback {
	if x != nil {
		return x.Playback
	}
	return Playback_UNSPECIFIED
}

func (x *CustomEvent) GetParametersList() []*CustomEvent_Parameter {
	if x != nil {
		return x.ParametersList
	}
	return nil
}

type CancelResponsesEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InteractionId   string   `protobuf:"bytes,1,opt,name=interactionId,proto3" json:"interactionId,omitempty"`
	UtteranceIdList []string `protobuf:"bytes,2,rep,name=utteranceIdList,proto3" json:"utteranceIdList,omitempty"`
}

func (x *CancelResponsesEvent) Reset() {
	*x = CancelResponsesEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelResponsesEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelResponsesEvent) ProtoMessage() {}

func (x *CancelResponsesEvent) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelResponsesEvent.ProtoReflect.Descriptor instead.
func (*CancelResponsesEvent) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{9}
}

func (x *CancelResponsesEvent) GetInteractionId() string {
	if x != nil {
		return x.InteractionId
	}
	return ""
}

func (x *CancelResponsesEvent) GetUtteranceIdList() []string {
	if x != nil {
		return x.UtteranceIdList
	}
	return nil
}

type EmotionEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Joy      float32                `protobuf:"fixed32,1,opt,name=joy,proto3" json:"joy,omitempty"`
	Fear     float32                `protobuf:"fixed32,2,opt,name=fear,proto3" json:"fear,omitempty"`
	Trust    float32                `protobuf:"fixed32,3,opt,name=trust,proto3" json:"trust,omitempty"`
	Surprise float32                `protobuf:"fixed32,4,opt,name=surprise,proto3" json:"surprise,omitempty"`
	Behavior EmotionEvent_SpaffCode `protobuf:"varint,5,opt,name=behavior,proto3,enum=ai.inworld.packets.EmotionEvent_SpaffCode" json:"behavior,omitempty"`
	Strength EmotionEvent_Strength  `protobuf:"varint,6,opt,name=strength,proto3,enum=ai.inworld.packets.EmotionEvent_Strength" json:"strength,omitempty"`
}

func (x *EmotionEvent) Reset() {
	*x = EmotionEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EmotionEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmotionEvent) ProtoMessage() {}

func (x *EmotionEvent) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmotionEvent.ProtoReflect.Descriptor instead.
func (*EmotionEvent) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{10}
}

func (x *EmotionEvent) GetJoy() float32 {
	if x != nil {
		return x.Joy
	}
	return 0
}

func (x *EmotionEvent) GetFear() float32 {
	if x != nil {
		return x.Fear
	}
	return 0
}

func (x *EmotionEvent) GetTrust() float32 {
	if x != nil {
		return x.Trust
	}
	return 0
}

func (x *EmotionEvent) GetSurprise() float32 {
	if x != nil {
		return x.Surprise
	}
	return 0
}

func (x *EmotionEvent) GetBehavior() EmotionEvent_SpaffCode {
	if x != nil {
		return x.Behavior
	}
	return EmotionEvent_NEUTRAL
}

func (x *EmotionEvent) GetStrength() EmotionEvent_Strength {
	if x != nil {
		return x.Strength
	}
	return EmotionEvent_UNSPECIFIED
}

type DataChunk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Data:
	//
	//	*DataChunk_Chunk
	//	*DataChunk_DurationMs
	Data                      isDataChunk_Data         `protobuf_oneof:"Data"`
	Type                      DataChunk_DataType       `protobuf:"varint,2,opt,name=type,proto3,enum=ai.inworld.packets.DataChunk_DataType" json:"type,omitempty"`
	AdditionalPhonemeInfoList []*AdditionalPhonemeInfo `protobuf:"bytes,4,rep,name=additionalPhonemeInfoList,proto3" json:"additionalPhonemeInfoList,omitempty"`
}

func (x *DataChunk) Reset() {
	*x = DataChunk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataChunk) ProtoMessage() {}

func (x *DataChunk) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataChunk.ProtoReflect.Descriptor instead.
func (*DataChunk) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{11}
}

func (m *DataChunk) GetData() isDataChunk_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *DataChunk) GetChunk() []byte {
	if x, ok := x.GetData().(*DataChunk_Chunk); ok {
		return x.Chunk
	}
	return nil
}

func (x *DataChunk) GetDurationMs() int64 {
	if x, ok := x.GetData().(*DataChunk_DurationMs); ok {
		return x.DurationMs
	}
	return 0
}

func (x *DataChunk) GetType() DataChunk_DataType {
	if x != nil {
		return x.Type
	}
	return DataChunk_UNSPECIFIED
}

func (x *DataChunk) GetAdditionalPhonemeInfoList() []*AdditionalPhonemeInfo {
	if x != nil {
		return x.AdditionalPhonemeInfoList
	}
	return nil
}

type isDataChunk_Data interface {
	isDataChunk_Data()
}

type DataChunk_Chunk struct {
	Chunk []byte `protobuf:"bytes,1,opt,name=chunk,proto3,oneof"`
}

type DataChunk_DurationMs struct {
	DurationMs int64 `protobuf:"varint,3,opt,name=durationMs,proto3,oneof"`
}

func (*DataChunk_Chunk) isDataChunk_Data() {}

func (*DataChunk_DurationMs) isDataChunk_Data() {}

type AdditionalPhonemeInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Phoneme     string               `protobuf:"bytes,1,opt,name=phoneme,proto3" json:"phoneme,omitempty"`
	StartOffset *durationpb.Duration `protobuf:"bytes,2,opt,name=startOffset,proto3,oneof" json:"startOffset,omitempty"`
}

func (x *AdditionalPhonemeInfo) Reset() {
	*x = AdditionalPhonemeInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AdditionalPhonemeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdditionalPhonemeInfo) ProtoMessage() {}

func (x *AdditionalPhonemeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdditionalPhonemeInfo.ProtoReflect.Descriptor instead.
func (*AdditionalPhonemeInfo) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{12}
}

func (x *AdditionalPhonemeInfo) GetPhoneme() string {
	if x != nil {
		return x.Phoneme
	}
	return ""
}

func (x *AdditionalPhonemeInfo) GetStartOffset() *durationpb.Duration {
	if x != nil {
		return x.StartOffset
	}
	return nil
}

type ActionEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Action:
	//
	//	*ActionEvent_NarratedAction
	Action   isActionEvent_Action `protobuf_oneof:"Action"`
	Playback Playback             `protobuf:"varint,2,opt,name=playback,proto3,enum=ai.inworld.packets.Playback" json:"playback,omitempty"`
}

func (x *ActionEvent) Reset() {
	*x = ActionEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionEvent) ProtoMessage() {}

func (x *ActionEvent) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionEvent.ProtoReflect.Descriptor instead.
func (*ActionEvent) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{13}
}

func (m *ActionEvent) GetAction() isActionEvent_Action {
	if m != nil {
		return m.Action
	}
	return nil
}

func (x *ActionEvent) GetNarratedAction() *NarratedAction {
	if x, ok := x.GetAction().(*ActionEvent_NarratedAction); ok {
		return x.NarratedAction
	}
	return nil
}

func (x *ActionEvent) GetPlayback() Playback {
	if x != nil {
		return x.Playback
	}
	return Playback_UNSPECIFIED
}

type isActionEvent_Action interface {
	isActionEvent_Action()
}

type ActionEvent_NarratedAction struct {
	NarratedAction *NarratedAction `protobuf:"bytes,1,opt,name=narratedAction,proto3,oneof"`
}

func (*ActionEvent_NarratedAction) isActionEvent_Action() {}

type NarratedAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content string `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *NarratedAction) Reset() {
	*x = NarratedAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NarratedAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NarratedAction) ProtoMessage() {}

func (x *NarratedAction) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NarratedAction.ProtoReflect.Descriptor instead.
func (*NarratedAction) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{14}
}

func (x *NarratedAction) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type MutationEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Mutation:
	//
	//	*MutationEvent_CancelResponses
	//	*MutationEvent_RegenerateResponse
	//	*MutationEvent_ApplyResponse
	//	*MutationEvent_LoadScene
	Mutation isMutationEvent_Mutation `protobuf_oneof:"Mutation"`
}

func (x *MutationEvent) Reset() {
	*x = MutationEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MutationEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MutationEvent) ProtoMessage() {}

func (x *MutationEvent) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MutationEvent.ProtoReflect.Descriptor instead.
func (*MutationEvent) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{15}
}

func (m *MutationEvent) GetMutation() isMutationEvent_Mutation {
	if m != nil {
		return m.Mutation
	}
	return nil
}

func (x *MutationEvent) GetCancelResponses() *CancelResponses {
	if x, ok := x.GetMutation().(*MutationEvent_CancelResponses); ok {
		return x.CancelResponses
	}
	return nil
}

func (x *MutationEvent) GetRegenerateResponse() *RegenerateResponse {
	if x, ok := x.GetMutation().(*MutationEvent_RegenerateResponse); ok {
		return x.RegenerateResponse
	}
	return nil
}

func (x *MutationEvent) GetApplyResponse() *ApplyResponse {
	if x, ok := x.GetMutation().(*MutationEvent_ApplyResponse); ok {
		return x.ApplyResponse
	}
	return nil
}

func (x *MutationEvent) GetLoadScene() *LoadScene {
	if x, ok := x.GetMutation().(*MutationEvent_LoadScene); ok {
		return x.LoadScene
	}
	return nil
}

type isMutationEvent_Mutation interface {
	isMutationEvent_Mutation()
}

type MutationEvent_CancelResponses struct {
	CancelResponses *CancelResponses `protobuf:"bytes,1,opt,name=cancelResponses,proto3,oneof"`
}

type MutationEvent_RegenerateResponse struct {
	RegenerateResponse *RegenerateResponse `protobuf:"bytes,2,opt,name=regenerateResponse,proto3,oneof"`
}

type MutationEvent_ApplyResponse struct {
	ApplyResponse *ApplyResponse `protobuf:"bytes,3,opt,name=applyResponse,proto3,oneof"`
}

type MutationEvent_LoadScene struct {
	LoadScene *LoadScene `protobuf:"bytes,4,opt,name=loadScene,proto3,oneof"`
}

func (*MutationEvent_CancelResponses) isMutationEvent_Mutation() {}

func (*MutationEvent_RegenerateResponse) isMutationEvent_Mutation() {}

func (*MutationEvent_ApplyResponse) isMutationEvent_Mutation() {}

func (*MutationEvent_LoadScene) isMutationEvent_Mutation() {}

type CancelResponses struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InteractionId   string   `protobuf:"bytes,1,opt,name=interactionId,proto3" json:"interactionId,omitempty"`
	UtteranceIdList []string `protobuf:"bytes,2,rep,name=utteranceIdList,proto3" json:"utteranceIdList,omitempty"`
}

func (x *CancelResponses) Reset() {
	*x = CancelResponses{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CancelResponses) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelResponses) ProtoMessage() {}

func (x *CancelResponses) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelResponses.ProtoReflect.Descriptor instead.
func (*CancelResponses) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{16}
}

func (x *CancelResponses) GetInteractionId() string {
	if x != nil {
		return x.InteractionId
	}
	return ""
}

func (x *CancelResponses) GetUtteranceIdList() []string {
	if x != nil {
		return x.UtteranceIdList
	}
	return nil
}

type RegenerateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InteractionId string `protobuf:"bytes,1,opt,name=interactionId,proto3" json:"interactionId,omitempty"`
}

func (x *RegenerateResponse) Reset() {
	*x = RegenerateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegenerateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegenerateResponse) ProtoMessage() {}

func (x *RegenerateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegenerateResponse.ProtoReflect.Descriptor instead.
func (*RegenerateResponse) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{17}
}

func (x *RegenerateResponse) GetInteractionId() string {
	if x != nil {
		return x.InteractionId
	}
	return ""
}

type ApplyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PacketId *PacketId `protobuf:"bytes,1,opt,name=packetId,proto3,oneof" json:"packetId,omitempty"`
}

func (x *ApplyResponse) Reset() {
	*x = ApplyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplyResponse) ProtoMessage() {}

func (x *ApplyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplyResponse.ProtoReflect.Descriptor instead.
func (*ApplyResponse) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{18}
}

func (x *ApplyResponse) GetPacketId() *PacketId {
	if x != nil {
		return x.PacketId
	}
	return nil
}

type LoadScene struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *LoadScene) Reset() {
	*x = LoadScene{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadScene) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadScene) ProtoMessage() {}

func (x *LoadScene) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadScene.ProtoReflect.Descriptor instead.
func (*LoadScene) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{19}
}

func (x *LoadScene) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type LoadSceneOutputEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentsList []*LoadSceneOutputEvent_Agent `protobuf:"bytes,1,rep,name=agentsList,proto3" json:"agentsList,omitempty"`
}

func (x *LoadSceneOutputEvent) Reset() {
	*x = LoadSceneOutputEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadSceneOutputEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadSceneOutputEvent) ProtoMessage() {}

func (x *LoadSceneOutputEvent) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadSceneOutputEvent.ProtoReflect.Descriptor instead.
func (*LoadSceneOutputEvent) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{20}
}

func (x *LoadSceneOutputEvent) GetAgentsList() []*LoadSceneOutputEvent_Agent {
	if x != nil {
		return x.AgentsList
	}
	return nil
}

type CustomEvent_Parameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *CustomEvent_Parameter) Reset() {
	*x = CustomEvent_Parameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomEvent_Parameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomEvent_Parameter) ProtoMessage() {}

func (x *CustomEvent_Parameter) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomEvent_Parameter.ProtoReflect.Descriptor instead.
func (*CustomEvent_Parameter) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{8, 0}
}

func (x *CustomEvent_Parameter) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CustomEvent_Parameter) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type LoadSceneOutputEvent_Agent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId   string `protobuf:"bytes,1,opt,name=agentId,proto3" json:"agentId,omitempty"`
	BrainName string `protobuf:"bytes,2,opt,name=brainName,proto3" json:"brainName,omitempty"`
	GivenName string `protobuf:"bytes,3,opt,name=givenName,proto3" json:"givenName,omitempty"`
}

func (x *LoadSceneOutputEvent_Agent) Reset() {
	*x = LoadSceneOutputEvent_Agent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_packets_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadSceneOutputEvent_Agent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadSceneOutputEvent_Agent) ProtoMessage() {}

func (x *LoadSceneOutputEvent_Agent) ProtoReflect() protoreflect.Message {
	mi := &file_packets_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadSceneOutputEvent_Agent.ProtoReflect.Descriptor instead.
func (*LoadSceneOutputEvent_Agent) Descriptor() ([]byte, []int) {
	return file_packets_proto_rawDescGZIP(), []int{20, 0}
}

func (x *LoadSceneOutputEvent_Agent) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *LoadSceneOutputEvent_Agent) GetBrainName() string {
	if x != nil {
		return x.BrainName
	}
	return ""
}

func (x *LoadSceneOutputEvent_Agent) GetGivenName() string {
	if x != nil {
		return x.GivenName
	}
	return ""
}

var File_packets_proto protoreflect.FileDescriptor

var file_packets_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x12, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x1a, 0x1e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x7b, 0x0a, 0x05, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x32, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x61, 0x69, 0x2e, 0x69,
	0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x41,
	0x63, 0x74, 0x6f, 0x72, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x22, 0x2a, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x4c, 0x41, 0x59,
	0x45, 0x52, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x47, 0x45, 0x4e, 0x54, 0x10, 0x02, 0x22,
	0x8f, 0x01, 0x0a, 0x07, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x36, 0x0a, 0x06, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69,
	0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73,
	0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x88, 0x01, 0x01, 0x12, 0x36, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x6f, 0x72, 0x48, 0x01,
	0x52, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x88, 0x01, 0x01, 0x42, 0x09, 0x0a, 0x07, 0x5f,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x74, 0x61, 0x72, 0x67, 0x65,
	0x74, 0x22, 0x6e, 0x0a, 0x08, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x75, 0x74, 0x74,
	0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x75, 0x74, 0x74, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0xef, 0x07, 0x0a, 0x0d, 0x49, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x12, 0x3d, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x48, 0x01, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x88,
	0x01, 0x01, 0x12, 0x3a, 0x0a, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67,
	0x48, 0x02, 0x52, 0x07, 0x72, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x88, 0x01, 0x01, 0x12, 0x20,
	0x0a, 0x0b, 0x6f, 0x6c, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x6c, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64,
	0x12, 0x3d, 0x0a, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e,
	0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64,
	0x48, 0x03, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x88, 0x01, 0x01, 0x12,
	0x33, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e,
	0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x3c, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72,
	0x6c, 0x64, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x6f, 0x6c, 0x12, 0x40, 0x0a, 0x0a, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x41, 0x75, 0x64, 0x69,
	0x6f, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x48, 0x00, 0x52, 0x0a, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x43,
	0x68, 0x75, 0x6e, 0x6b, 0x12, 0x3c, 0x0a, 0x07, 0x67, 0x65, 0x73, 0x74, 0x75, 0x72, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72,
	0x6c, 0x64, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x73, 0x74, 0x75,
	0x72, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x07, 0x67, 0x65, 0x73, 0x74, 0x75,
	0x72, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e,
	0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x06, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x12, 0x54, 0x0a,
	0x0f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x43, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x0f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x73, 0x12, 0x3c, 0x0a, 0x07, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c,
	0x64, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x45, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x07, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x3d, 0x0a, 0x09, 0x64, 0x61, 0x74, 0x61, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c,
	0x64, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x68,
	0x75, 0x6e, 0x6b, 0x48, 0x00, 0x52, 0x09, 0x64, 0x61, 0x74, 0x61, 0x43, 0x68, 0x75, 0x6e, 0x6b,
	0x12, 0x39, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1f, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x70, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x48, 0x00, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3f, 0x0a, 0x08, 0x6d,
	0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x2e, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x48, 0x00, 0x52, 0x08, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x54, 0x0a, 0x0f,
	0x6c, 0x6f, 0x61, 0x64, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x18,
	0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72,
	0x6c, 0x64, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x53,
	0x63, 0x65, 0x6e, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48,
	0x00, 0x52, 0x0f, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4f, 0x75, 0x74, 0x70,
	0x75, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x42, 0x0c, 0x0a, 0x0a,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x72,
	0x6f, 0x75, 0x74, 0x69, 0x6e, 0x67, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x49, 0x64, 0x22, 0xdc, 0x01, 0x0a, 0x09, 0x54, 0x65, 0x78, 0x74, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x48, 0x0a, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x61, 0x69, 0x2e, 0x69,
	0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x54,
	0x65, 0x78, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x52, 0x0a, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x70, 0x62, 0x5f, 0x66, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x70, 0x62, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x22, 0x56, 0x0a, 0x0a, 0x53, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x53, 0x50, 0x45, 0x45, 0x43, 0x48, 0x5f,
	0x54, 0x4f, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x54, 0x59, 0x50,
	0x45, 0x44, 0x5f, 0x49, 0x4e, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x47, 0x45, 0x4e, 0x45, 0x52,
	0x41, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x49, 0x4c, 0x4c, 0x45, 0x52,
	0x10, 0x04, 0x22, 0x8e, 0x03, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x12, 0x3f, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x36, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x48, 0x00, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x88, 0x01, 0x01, 0x22, 0xd6,
	0x01, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x5f,
	0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x10, 0x01, 0x12,
	0x15, 0x0a, 0x11, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e,
	0x5f, 0x45, 0x4e, 0x44, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x41,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x54,
	0x54, 0x53, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x53, 0x54, 0x41, 0x52,
	0x54, 0x10, 0x04, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x54, 0x53, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x42,
	0x41, 0x43, 0x4b, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11, 0x54, 0x54, 0x53,
	0x5f, 0x50, 0x4c, 0x41, 0x59, 0x42, 0x41, 0x43, 0x4b, 0x5f, 0x4d, 0x55, 0x54, 0x45, 0x10, 0x06,
	0x12, 0x17, 0x0a, 0x13, 0x54, 0x54, 0x53, 0x5f, 0x50, 0x4c, 0x41, 0x59, 0x42, 0x41, 0x43, 0x4b,
	0x5f, 0x55, 0x4e, 0x4d, 0x55, 0x54, 0x45, 0x10, 0x07, 0x12, 0x0b, 0x0a, 0x07, 0x57, 0x41, 0x52,
	0x4e, 0x49, 0x4e, 0x47, 0x10, 0x08, 0x12, 0x0f, 0x0a, 0x0b, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f,
	0x4e, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0x09, 0x42, 0x0a, 0x0a, 0x08, 0x5f, 0x70, 0x61, 0x79, 0x6c,
	0x6f, 0x61, 0x64, 0x22, 0x22, 0x0a, 0x0a, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x68, 0x75, 0x6e,
	0x6b, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x22, 0x87, 0x02, 0x0a, 0x0c, 0x47, 0x65, 0x73, 0x74,
	0x75, 0x72, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x39, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x47, 0x65, 0x73, 0x74,
	0x75, 0x72, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72,
	0x6c, 0x64, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x62,
	0x61, 0x63, 0x6b, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x22, 0x81, 0x01,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c, 0x0a, 0x08, 0x47, 0x52, 0x45, 0x45, 0x54, 0x49,
	0x4e, 0x47, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x41, 0x52, 0x45, 0x57, 0x45, 0x4c, 0x4c,
	0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x47, 0x52, 0x45, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x10,
	0x02, 0x12, 0x10, 0x0a, 0x0c, 0x44, 0x49, 0x53, 0x41, 0x47, 0x52, 0x45, 0x45, 0x4d, 0x45, 0x4e,
	0x54, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x47, 0x52, 0x41, 0x54, 0x49, 0x54, 0x55, 0x44, 0x45,
	0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x45, 0x4c, 0x45, 0x42, 0x52, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x10, 0x05, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x4f, 0x52, 0x45, 0x44, 0x4f, 0x4d, 0x10, 0x06,
	0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x43, 0x45, 0x52, 0x54, 0x41, 0x49, 0x4e, 0x54, 0x59, 0x10,
	0x07, 0x22, 0xe5, 0x01, 0x0a, 0x0b, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63,
	0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77,
	0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x50, 0x6c, 0x61,
	0x79, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x12,
	0x51, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x4c, 0x69, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77,
	0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74,
	0x65, 0x72, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x4c, 0x69,
	0x73, 0x74, 0x1a, 0x35, 0x0a, 0x09, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x66, 0x0a, 0x14, 0x43, 0x61, 0x6e,
	0x63, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x75, 0x74, 0x74, 0x65, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0f, 0x75, 0x74, 0x74, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0xd3, 0x04, 0x0a, 0x0c, 0x45, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6a, 0x6f, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52,
	0x03, 0x6a, 0x6f, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x65, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x04, 0x66, 0x65, 0x61, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x72, 0x75, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x74, 0x72, 0x75, 0x73, 0x74, 0x12, 0x1a,
	0x0a, 0x08, 0x73, 0x75, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x08, 0x73, 0x75, 0x72, 0x70, 0x72, 0x69, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x08, 0x62, 0x65,
	0x68, 0x61, 0x76, 0x69, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x61,
	0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x2e, 0x45, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53,
	0x70, 0x61, 0x66, 0x66, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x08, 0x62, 0x65, 0x68, 0x61, 0x76, 0x69,
	0x6f, 0x72, 0x12, 0x45, 0x0a, 0x08, 0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c,
	0x64, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x45, 0x6d, 0x6f, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x53, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x52,
	0x08, 0x73, 0x74, 0x72, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x9c, 0x02, 0x0a, 0x09, 0x53, 0x70,
	0x61, 0x66, 0x66, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x45, 0x55, 0x54, 0x52,
	0x41, 0x4c, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x49, 0x53, 0x47, 0x55, 0x53, 0x54, 0x10,
	0x01, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x4d, 0x50, 0x54, 0x10, 0x02, 0x12,
	0x10, 0x0a, 0x0c, 0x42, 0x45, 0x4c, 0x4c, 0x49, 0x47, 0x45, 0x52, 0x45, 0x4e, 0x43, 0x45, 0x10,
	0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x44, 0x4f, 0x4d, 0x49, 0x4e, 0x45, 0x45, 0x52, 0x49, 0x4e, 0x47,
	0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x52, 0x49, 0x54, 0x49, 0x43, 0x49, 0x53, 0x4d, 0x10,
	0x05, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x4e, 0x47, 0x45, 0x52, 0x10, 0x06, 0x12, 0x0b, 0x0a, 0x07,
	0x54, 0x45, 0x4e, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x07, 0x12, 0x0f, 0x0a, 0x0b, 0x54, 0x45, 0x4e,
	0x53, 0x45, 0x5f, 0x48, 0x55, 0x4d, 0x4f, 0x52, 0x10, 0x08, 0x12, 0x11, 0x0a, 0x0d, 0x44, 0x45,
	0x46, 0x45, 0x4e, 0x53, 0x49, 0x56, 0x45, 0x4e, 0x45, 0x53, 0x53, 0x10, 0x09, 0x12, 0x0b, 0x0a,
	0x07, 0x57, 0x48, 0x49, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x0a, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x41,
	0x44, 0x4e, 0x45, 0x53, 0x53, 0x10, 0x0b, 0x12, 0x10, 0x0a, 0x0c, 0x53, 0x54, 0x4f, 0x4e, 0x45,
	0x57, 0x41, 0x4c, 0x4c, 0x49, 0x4e, 0x47, 0x10, 0x0c, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x54,
	0x45, 0x52, 0x45, 0x53, 0x54, 0x10, 0x0d, 0x12, 0x0e, 0x0a, 0x0a, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x0e, 0x12, 0x0d, 0x0a, 0x09, 0x41, 0x46, 0x46, 0x45, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x10, 0x0f, 0x12, 0x09, 0x0a, 0x05, 0x48, 0x55, 0x4d, 0x4f, 0x52, 0x10,
	0x10, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x55, 0x52, 0x50, 0x52, 0x49, 0x53, 0x45, 0x10, 0x11, 0x12,
	0x07, 0x0a, 0x03, 0x4a, 0x4f, 0x59, 0x10, 0x12, 0x22, 0x3d, 0x0a, 0x08, 0x53, 0x74, 0x72, 0x65,
	0x6e, 0x67, 0x74, 0x68, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x45, 0x41, 0x4b, 0x10, 0x01, 0x12,
	0x0a, 0x0a, 0x06, 0x53, 0x54, 0x52, 0x4f, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x4e,
	0x4f, 0x52, 0x4d, 0x41, 0x4c, 0x10, 0x03, 0x22, 0xc1, 0x02, 0x0a, 0x09, 0x44, 0x61, 0x74, 0x61,
	0x43, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x16, 0x0a, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x05, 0x63, 0x68, 0x75, 0x6e, 0x6b, 0x12, 0x20, 0x0a,
	0x0a, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x48, 0x00, 0x52, 0x0a, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x73, 0x12,
	0x3a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x26, 0x2e,
	0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65,
	0x74, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x43, 0x68, 0x75, 0x6e, 0x6b, 0x2e, 0x44, 0x61, 0x74,
	0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x67, 0x0a, 0x19, 0x61,
	0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x6d, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29,
	0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x2e, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x68,
	0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x19, 0x61, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x4c, 0x69, 0x73, 0x74, 0x22, 0x4d, 0x0a, 0x08, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x55, 0x44, 0x49, 0x4f, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x41, 0x4e, 0x49, 0x4d, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x53,
	0x49, 0x4c, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x54, 0x41, 0x54,
	0x45, 0x10, 0x04, 0x42, 0x06, 0x0a, 0x04, 0x44, 0x61, 0x74, 0x61, 0x22, 0x83, 0x01, 0x0a, 0x15,
	0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x50, 0x68, 0x6f, 0x6e, 0x65, 0x6d,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x12,
	0x40, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x0b, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x88, 0x01,
	0x01, 0x42, 0x0e, 0x0a, 0x0c, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x4f, 0x66, 0x66, 0x73, 0x65,
	0x74, 0x22, 0x9f, 0x01, 0x0a, 0x0b, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x4c, 0x0a, 0x0e, 0x6e, 0x61, 0x72, 0x72, 0x61, 0x74, 0x65, 0x64, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x69, 0x2e, 0x69,
	0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x4e,
	0x61, 0x72, 0x72, 0x61, 0x74, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x0e, 0x6e, 0x61, 0x72, 0x72, 0x61, 0x74, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x38, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1c, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x70,
	0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x52,
	0x08, 0x70, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x42, 0x08, 0x0a, 0x06, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x2a, 0x0a, 0x0e, 0x4e, 0x61, 0x72, 0x72, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22,
	0xd0, 0x02, 0x0a, 0x0d, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x12, 0x4f, 0x0a, 0x0f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x61, 0x69, 0x2e,
	0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x73, 0x48,
	0x00, 0x52, 0x0f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x73, 0x12, 0x58, 0x0a, 0x12, 0x72, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26,
	0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x70, 0x61, 0x63, 0x6b,
	0x65, 0x74, 0x73, 0x2e, 0x52, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x12, 0x72, 0x65, 0x67, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x49, 0x0a, 0x0d,
	0x61, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x09, 0x6c, 0x6f, 0x61, 0x64, 0x53,
	0x63, 0x65, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x61, 0x69, 0x2e,
	0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e,
	0x4c, 0x6f, 0x61, 0x64, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x48, 0x00, 0x52, 0x09, 0x6c, 0x6f, 0x61,
	0x64, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x42, 0x0a, 0x0a, 0x08, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x61, 0x0a, 0x0f, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x75,
	0x74, 0x74, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x49, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x75, 0x74, 0x74, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x49,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x3a, 0x0a, 0x12, 0x52, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x5b, 0x0a, 0x0d, 0x41, 0x70, 0x70, 0x6c, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3d, 0x0a, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c,
	0x64, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x49, 0x64, 0x48, 0x00, 0x52, 0x08, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x88, 0x01,
	0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x49, 0x64, 0x22, 0x1f,
	0x0a, 0x09, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x22,
	0xc5, 0x01, 0x0a, 0x14, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4f, 0x75, 0x74,
	0x70, 0x75, 0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x4e, 0x0a, 0x0a, 0x61, 0x67, 0x65, 0x6e,
	0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x61,
	0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74,
	0x73, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x4f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x67,
	0x65, 0x6e, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x5d, 0x0a, 0x05, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x62,
	0x72, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x62, 0x72, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x69, 0x76,
	0x65, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67, 0x69,
	0x76, 0x65, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x2a, 0x50, 0x0a, 0x08, 0x50, 0x6c, 0x61, 0x79, 0x62,
	0x61, 0x63, 0x6b, 0x12, 0x0f, 0x0a, 0x0b, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x41, 0x43, 0x54,
	0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x41, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x45, 0x4e, 0x44, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x54,
	0x54, 0x45, 0x52, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x03, 0x42, 0x2e, 0x5a, 0x2c, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x7a, 0x69, 0x76, 0x6f, 0x79, 0x2f, 0x67, 0x6f,
	0x2d, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x75,
	0x66, 0x2f, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_packets_proto_rawDescOnce sync.Once
	file_packets_proto_rawDescData = file_packets_proto_rawDesc
)

func file_packets_proto_rawDescGZIP() []byte {
	file_packets_proto_rawDescOnce.Do(func() {
		file_packets_proto_rawDescData = protoimpl.X.CompressGZIP(file_packets_proto_rawDescData)
	})
	return file_packets_proto_rawDescData
}

var file_packets_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_packets_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_packets_proto_goTypes = []interface{}{
	(Playback)(0),                      // 0: ai.inworld.packets.Playback
	(Actor_Type)(0),                    // 1: ai.inworld.packets.Actor.Type
	(TextEvent_SourceType)(0),          // 2: ai.inworld.packets.TextEvent.SourceType
	(ControlEvent_Action)(0),           // 3: ai.inworld.packets.ControlEvent.Action
	(GestureEvent_Type)(0),             // 4: ai.inworld.packets.GestureEvent.Type
	(EmotionEvent_SpaffCode)(0),        // 5: ai.inworld.packets.EmotionEvent.SpaffCode
	(EmotionEvent_Strength)(0),         // 6: ai.inworld.packets.EmotionEvent.Strength
	(DataChunk_DataType)(0),            // 7: ai.inworld.packets.DataChunk.DataType
	(*Actor)(nil),                      // 8: ai.inworld.packets.Actor
	(*Routing)(nil),                    // 9: ai.inworld.packets.Routing
	(*PacketId)(nil),                   // 10: ai.inworld.packets.PacketId
	(*InworldPacket)(nil),              // 11: ai.inworld.packets.InworldPacket
	(*TextEvent)(nil),                  // 12: ai.inworld.packets.TextEvent
	(*ControlEvent)(nil),               // 13: ai.inworld.packets.ControlEvent
	(*AudioChunk)(nil),                 // 14: ai.inworld.packets.AudioChunk
	(*GestureEvent)(nil),               // 15: ai.inworld.packets.GestureEvent
	(*CustomEvent)(nil),                // 16: ai.inworld.packets.CustomEvent
	(*CancelResponsesEvent)(nil),       // 17: ai.inworld.packets.CancelResponsesEvent
	(*EmotionEvent)(nil),               // 18: ai.inworld.packets.EmotionEvent
	(*DataChunk)(nil),                  // 19: ai.inworld.packets.DataChunk
	(*AdditionalPhonemeInfo)(nil),      // 20: ai.inworld.packets.AdditionalPhonemeInfo
	(*ActionEvent)(nil),                // 21: ai.inworld.packets.ActionEvent
	(*NarratedAction)(nil),             // 22: ai.inworld.packets.NarratedAction
	(*MutationEvent)(nil),              // 23: ai.inworld.packets.MutationEvent
	(*CancelResponses)(nil),            // 24: ai.inworld.packets.CancelResponses
	(*RegenerateResponse)(nil),         // 25: ai.inworld.packets.RegenerateResponse
	(*ApplyResponse)(nil),              // 26: ai.inworld.packets.ApplyResponse
	(*LoadScene)(nil),                  // 27: ai.inworld.packets.LoadScene
	(*LoadSceneOutputEvent)(nil),       // 28: ai.inworld.packets.LoadSceneOutputEvent
	(*CustomEvent_Parameter)(nil),      // 29: ai.inworld.packets.CustomEvent.Parameter
	(*LoadSceneOutputEvent_Agent)(nil), // 30: ai.inworld.packets.LoadSceneOutputEvent.Agent
	(*timestamppb.Timestamp)(nil),      // 31: google.protobuf.Timestamp
	(*structpb.Struct)(nil),            // 32: google.protobuf.Struct
	(*durationpb.Duration)(nil),        // 33: google.protobuf.Duration
}
var file_packets_proto_depIdxs = []int32{
	1,  // 0: ai.inworld.packets.Actor.type:type_name -> ai.inworld.packets.Actor.Type
	8,  // 1: ai.inworld.packets.Routing.source:type_name -> ai.inworld.packets.Actor
	8,  // 2: ai.inworld.packets.Routing.target:type_name -> ai.inworld.packets.Actor
	31, // 3: ai.inworld.packets.InworldPacket.timestamp:type_name -> google.protobuf.Timestamp
	9,  // 4: ai.inworld.packets.InworldPacket.routing:type_name -> ai.inworld.packets.Routing
	10, // 5: ai.inworld.packets.InworldPacket.packetId:type_name -> ai.inworld.packets.PacketId
	12, // 6: ai.inworld.packets.InworldPacket.text:type_name -> ai.inworld.packets.TextEvent
	13, // 7: ai.inworld.packets.InworldPacket.control:type_name -> ai.inworld.packets.ControlEvent
	14, // 8: ai.inworld.packets.InworldPacket.audioChunk:type_name -> ai.inworld.packets.AudioChunk
	15, // 9: ai.inworld.packets.InworldPacket.gesture:type_name -> ai.inworld.packets.GestureEvent
	16, // 10: ai.inworld.packets.InworldPacket.custom:type_name -> ai.inworld.packets.CustomEvent
	17, // 11: ai.inworld.packets.InworldPacket.cancelresponses:type_name -> ai.inworld.packets.CancelResponsesEvent
	18, // 12: ai.inworld.packets.InworldPacket.emotion:type_name -> ai.inworld.packets.EmotionEvent
	19, // 13: ai.inworld.packets.InworldPacket.dataChunk:type_name -> ai.inworld.packets.DataChunk
	21, // 14: ai.inworld.packets.InworldPacket.action:type_name -> ai.inworld.packets.ActionEvent
	23, // 15: ai.inworld.packets.InworldPacket.mutation:type_name -> ai.inworld.packets.MutationEvent
	28, // 16: ai.inworld.packets.InworldPacket.loadSceneOutput:type_name -> ai.inworld.packets.LoadSceneOutputEvent
	2,  // 17: ai.inworld.packets.TextEvent.sourceType:type_name -> ai.inworld.packets.TextEvent.SourceType
	3,  // 18: ai.inworld.packets.ControlEvent.action:type_name -> ai.inworld.packets.ControlEvent.Action
	32, // 19: ai.inworld.packets.ControlEvent.payload:type_name -> google.protobuf.Struct
	4,  // 20: ai.inworld.packets.GestureEvent.type:type_name -> ai.inworld.packets.GestureEvent.Type
	0,  // 21: ai.inworld.packets.GestureEvent.playback:type_name -> ai.inworld.packets.Playback
	0,  // 22: ai.inworld.packets.CustomEvent.playback:type_name -> ai.inworld.packets.Playback
	29, // 23: ai.inworld.packets.CustomEvent.parametersList:type_name -> ai.inworld.packets.CustomEvent.Parameter
	5,  // 24: ai.inworld.packets.EmotionEvent.behavior:type_name -> ai.inworld.packets.EmotionEvent.SpaffCode
	6,  // 25: ai.inworld.packets.EmotionEvent.strength:type_name -> ai.inworld.packets.EmotionEvent.Strength
	7,  // 26: ai.inworld.packets.DataChunk.type:type_name -> ai.inworld.packets.DataChunk.DataType
	20, // 27: ai.inworld.packets.DataChunk.additionalPhonemeInfoList:type_name -> ai.inworld.packets.AdditionalPhonemeInfo
	33, // 28: ai.inworld.packets.AdditionalPhonemeInfo.startOffset:type_name -> google.protobuf.Duration
	22, // 29: ai.inworld.packets.ActionEvent.narratedAction:type_name -> ai.inworld.packets.NarratedAction
	0,  // 30: ai.inworld.packets.ActionEvent.playback:type_name -> ai.inworld.packets.Playback
	24, // 31: ai.inworld.packets.MutationEvent.cancelResponses:type_name -> ai.inworld.packets.CancelResponses
	25, // 32: ai.inworld.packets.MutationEvent.regenerateResponse:type_name -> ai.inworld.packets.RegenerateResponse
	26, // 33: ai.inworld.packets.MutationEvent.applyResponse:type_name -> ai.inworld.packets.ApplyResponse
	27, // 34: ai.inworld.packets.MutationEvent.loadScene:type_name -> ai.inworld.packets.LoadScene
	10, // 35: ai.inworld.packets.ApplyResponse.packetId:type_name -> ai.inworld.packets.PacketId
	30, // 36: ai.inworld.packets.LoadSceneOutputEvent.agentsList:type_name -> ai.inworld.packets.LoadSceneOutputEvent.Agent
	37, // [37:37] is the sub-list for method output_type
	37, // [37:37] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_packets_proto_init() }
func file_packets_proto_init() {
	if File_packets_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_packets_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Actor); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Routing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PacketId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InworldPacket); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TextEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ControlEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GestureEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelResponsesEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EmotionEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataChunk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AdditionalPhonemeInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NarratedAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MutationEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CancelResponses); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegenerateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadScene); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadSceneOutputEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomEvent_Parameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_packets_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadSceneOutputEvent_Agent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_packets_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_packets_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*InworldPacket_Text)(nil),
		(*InworldPacket_Control)(nil),
		(*InworldPacket_AudioChunk)(nil),
		(*InworldPacket_Gesture)(nil),
		(*InworldPacket_Custom)(nil),
		(*InworldPacket_Cancelresponses)(nil),
		(*InworldPacket_Emotion)(nil),
		(*InworldPacket_DataChunk)(nil),
		(*InworldPacket_Action)(nil),
		(*InworldPacket_Mutation)(nil),
		(*InworldPacket_LoadSceneOutput)(nil),
	}
	file_packets_proto_msgTypes[5].OneofWrappers = []interface{}{}
	file_packets_proto_msgTypes[11].OneofWrappers = []interface{}{
		(*DataChunk_Chunk)(nil),
		(*DataChunk_DurationMs)(nil),
	}
	file_packets_proto_msgTypes[12].OneofWrappers = []interface{}{}
	file_packets_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*ActionEvent_NarratedAction)(nil),
	}
	file_packets_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*MutationEvent_CancelResponses)(nil),
		(*MutationEvent_RegenerateResponse)(nil),
		(*MutationEvent_ApplyResponse)(nil),
		(*MutationEvent_LoadScene)(nil),
	}
	file_packets_proto_msgTypes[18].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_packets_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_packets_proto_goTypes,
		DependencyIndexes: file_packets_proto_depIdxs,
		EnumInfos:         file_packets_proto_enumTypes,
		MessageInfos:      file_packets_proto_msgTypes,
	}.Build()
	File_packets_proto = out.File
	file_packets_proto_rawDesc = nil
	file_packets_proto_goTypes = nil
	file_packets_proto_depIdxs = nil
}
