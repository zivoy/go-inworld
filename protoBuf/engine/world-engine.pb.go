// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: world-engine.proto

package engine

import (
	packets "github.com/zivoy/go-inworld/protoBuf/packets"
	voices "github.com/zivoy/go-inworld/protoBuf/voices"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type InteractionDislikeType int32

const (
	InteractionDislikeType_DISLIKE_TYPE_UNSPECIFIED              InteractionDislikeType = 0
	InteractionDislikeType_DISLIKE_TYPE_IRRELEVANT               InteractionDislikeType = 1
	InteractionDislikeType_DISLIKE_TYPE_UNSAFE                   InteractionDislikeType = 2
	InteractionDislikeType_DISLIKE_TYPE_UNTRUE                   InteractionDislikeType = 3
	InteractionDislikeType_DISLIKE_TYPE_INCORRECT_USE_KNOWLEDGE  InteractionDislikeType = 4
	InteractionDislikeType_DISLIKE_TYPE_UNEXPECTED_ACTION        InteractionDislikeType = 5
	InteractionDislikeType_DISLIKE_TYPE_UNEXPECTED_GOAL_BEHAVIOR InteractionDislikeType = 6
	InteractionDislikeType_DISLIKE_TYPE_REPETITION               InteractionDislikeType = 7
)

// Enum value maps for InteractionDislikeType.
var (
	InteractionDislikeType_name = map[int32]string{
		0: "DISLIKE_TYPE_UNSPECIFIED",
		1: "DISLIKE_TYPE_IRRELEVANT",
		2: "DISLIKE_TYPE_UNSAFE",
		3: "DISLIKE_TYPE_UNTRUE",
		4: "DISLIKE_TYPE_INCORRECT_USE_KNOWLEDGE",
		5: "DISLIKE_TYPE_UNEXPECTED_ACTION",
		6: "DISLIKE_TYPE_UNEXPECTED_GOAL_BEHAVIOR",
		7: "DISLIKE_TYPE_REPETITION",
	}
	InteractionDislikeType_value = map[string]int32{
		"DISLIKE_TYPE_UNSPECIFIED":              0,
		"DISLIKE_TYPE_IRRELEVANT":               1,
		"DISLIKE_TYPE_UNSAFE":                   2,
		"DISLIKE_TYPE_UNTRUE":                   3,
		"DISLIKE_TYPE_INCORRECT_USE_KNOWLEDGE":  4,
		"DISLIKE_TYPE_UNEXPECTED_ACTION":        5,
		"DISLIKE_TYPE_UNEXPECTED_GOAL_BEHAVIOR": 6,
		"DISLIKE_TYPE_REPETITION":               7,
	}
)

func (x InteractionDislikeType) Enum() *InteractionDislikeType {
	p := new(InteractionDislikeType)
	*p = x
	return p
}

func (x InteractionDislikeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InteractionDislikeType) Descriptor() protoreflect.EnumDescriptor {
	return file_world_engine_proto_enumTypes[0].Descriptor()
}

func (InteractionDislikeType) Type() protoreflect.EnumType {
	return &file_world_engine_proto_enumTypes[0]
}

func (x InteractionDislikeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InteractionDislikeType.Descriptor instead.
func (InteractionDislikeType) EnumDescriptor() ([]byte, []int) {
	return file_world_engine_proto_rawDescGZIP(), []int{0}
}

type VoicePreset int32

const (
	VoicePreset_VOICE_PRESET_UNSPECIFIED              VoicePreset = 0
	VoicePreset_VOICE_PRESET_FEMALE_1                 VoicePreset = 1
	VoicePreset_VOICE_PRESET_FEMALE_2                 VoicePreset = 2
	VoicePreset_VOICE_PRESET_FEMALE_3                 VoicePreset = 3
	VoicePreset_VOICE_PRESET_FEMALE_4                 VoicePreset = 4
	VoicePreset_VOICE_PRESET_FEMALE_5                 VoicePreset = 5
	VoicePreset_VOICE_PRESET_MALE_1                   VoicePreset = 6
	VoicePreset_VOICE_PRESET_MALE_2                   VoicePreset = 7
	VoicePreset_VOICE_PRESET_MALE_3                   VoicePreset = 8
	VoicePreset_VOICE_PRESET_MALE_4                   VoicePreset = 9
	VoicePreset_VOICE_PRESET_MALE_5                   VoicePreset = 10
	VoicePreset_INWORLD_VOICE_PRESET_MALE_1           VoicePreset = 11
	VoicePreset_INWORLD_VOICE_PRESET_MALE_2           VoicePreset = 12
	VoicePreset_INWORLD_VOICE_PRESET_FEMALE_1         VoicePreset = 13
	VoicePreset_INWORLD_VOICE_PRESET_FEMALE_2         VoicePreset = 14
	VoicePreset_INWORLD_VOICE_PRESET_MALE_3           VoicePreset = 15
	VoicePreset_INWORLD_VOICE_PRESET_MALE_4           VoicePreset = 16
	VoicePreset_INWORLD_VOICE_PRESET_MALE_5           VoicePreset = 17
	VoicePreset_INWORLD_VOICE_PRESET_FEMALE_3         VoicePreset = 18
	VoicePreset_INWORLD_VOICE_PRESET_FEMALE_4         VoicePreset = 19
	VoicePreset_INWORLD_VOICE_PRESET_ROBOT_MALE_1     VoicePreset = 20
	VoicePreset_INWORLD_VOICE_PRESET_ROBOT_MALE_2     VoicePreset = 21
	VoicePreset_INWORLD_VOICE_PRESET_ROBOT_MALE_3     VoicePreset = 22
	VoicePreset_INWORLD_VOICE_PRESET_ROBOT_MALE_4     VoicePreset = 23
	VoicePreset_INWORLD_VOICE_PRESET_ROBOT_MALE_5     VoicePreset = 24
	VoicePreset_INWORLD_VOICE_PRESET_ROBOT_FEMALE_1   VoicePreset = 25
	VoicePreset_INWORLD_VOICE_PRESET_ROBOT_FEMALE_2   VoicePreset = 26
	VoicePreset_INWORLD_VOICE_PRESET_ROBOT_FEMALE_3   VoicePreset = 27
	VoicePreset_INWORLD_VOICE_PRESET_ROBOT_FEMALE_4   VoicePreset = 28
	VoicePreset_INWORLD_VOICE_PRESET_SPIKE            VoicePreset = 29
	VoicePreset_INWORLD_VOICE_PRESET_TWILIGHT         VoicePreset = 30
	VoicePreset_INWORLD_VOICE_PRESET_FLUTTERSHY       VoicePreset = 31
	VoicePreset_INWORLD_VOICE_PRESET_ROBOT_SPIKE      VoicePreset = 32
	VoicePreset_INWORLD_VOICE_PRESET_ROBOT_TWILIGHT   VoicePreset = 33
	VoicePreset_INWORLD_VOICE_PRESET_ROBOT_FLUTTERSHY VoicePreset = 34
)

// Enum value maps for VoicePreset.
var (
	VoicePreset_name = map[int32]string{
		0:  "VOICE_PRESET_UNSPECIFIED",
		1:  "VOICE_PRESET_FEMALE_1",
		2:  "VOICE_PRESET_FEMALE_2",
		3:  "VOICE_PRESET_FEMALE_3",
		4:  "VOICE_PRESET_FEMALE_4",
		5:  "VOICE_PRESET_FEMALE_5",
		6:  "VOICE_PRESET_MALE_1",
		7:  "VOICE_PRESET_MALE_2",
		8:  "VOICE_PRESET_MALE_3",
		9:  "VOICE_PRESET_MALE_4",
		10: "VOICE_PRESET_MALE_5",
		11: "INWORLD_VOICE_PRESET_MALE_1",
		12: "INWORLD_VOICE_PRESET_MALE_2",
		13: "INWORLD_VOICE_PRESET_FEMALE_1",
		14: "INWORLD_VOICE_PRESET_FEMALE_2",
		15: "INWORLD_VOICE_PRESET_MALE_3",
		16: "INWORLD_VOICE_PRESET_MALE_4",
		17: "INWORLD_VOICE_PRESET_MALE_5",
		18: "INWORLD_VOICE_PRESET_FEMALE_3",
		19: "INWORLD_VOICE_PRESET_FEMALE_4",
		20: "INWORLD_VOICE_PRESET_ROBOT_MALE_1",
		21: "INWORLD_VOICE_PRESET_ROBOT_MALE_2",
		22: "INWORLD_VOICE_PRESET_ROBOT_MALE_3",
		23: "INWORLD_VOICE_PRESET_ROBOT_MALE_4",
		24: "INWORLD_VOICE_PRESET_ROBOT_MALE_5",
		25: "INWORLD_VOICE_PRESET_ROBOT_FEMALE_1",
		26: "INWORLD_VOICE_PRESET_ROBOT_FEMALE_2",
		27: "INWORLD_VOICE_PRESET_ROBOT_FEMALE_3",
		28: "INWORLD_VOICE_PRESET_ROBOT_FEMALE_4",
		29: "INWORLD_VOICE_PRESET_SPIKE",
		30: "INWORLD_VOICE_PRESET_TWILIGHT",
		31: "INWORLD_VOICE_PRESET_FLUTTERSHY",
		32: "INWORLD_VOICE_PRESET_ROBOT_SPIKE",
		33: "INWORLD_VOICE_PRESET_ROBOT_TWILIGHT",
		34: "INWORLD_VOICE_PRESET_ROBOT_FLUTTERSHY",
	}
	VoicePreset_value = map[string]int32{
		"VOICE_PRESET_UNSPECIFIED":              0,
		"VOICE_PRESET_FEMALE_1":                 1,
		"VOICE_PRESET_FEMALE_2":                 2,
		"VOICE_PRESET_FEMALE_3":                 3,
		"VOICE_PRESET_FEMALE_4":                 4,
		"VOICE_PRESET_FEMALE_5":                 5,
		"VOICE_PRESET_MALE_1":                   6,
		"VOICE_PRESET_MALE_2":                   7,
		"VOICE_PRESET_MALE_3":                   8,
		"VOICE_PRESET_MALE_4":                   9,
		"VOICE_PRESET_MALE_5":                   10,
		"INWORLD_VOICE_PRESET_MALE_1":           11,
		"INWORLD_VOICE_PRESET_MALE_2":           12,
		"INWORLD_VOICE_PRESET_FEMALE_1":         13,
		"INWORLD_VOICE_PRESET_FEMALE_2":         14,
		"INWORLD_VOICE_PRESET_MALE_3":           15,
		"INWORLD_VOICE_PRESET_MALE_4":           16,
		"INWORLD_VOICE_PRESET_MALE_5":           17,
		"INWORLD_VOICE_PRESET_FEMALE_3":         18,
		"INWORLD_VOICE_PRESET_FEMALE_4":         19,
		"INWORLD_VOICE_PRESET_ROBOT_MALE_1":     20,
		"INWORLD_VOICE_PRESET_ROBOT_MALE_2":     21,
		"INWORLD_VOICE_PRESET_ROBOT_MALE_3":     22,
		"INWORLD_VOICE_PRESET_ROBOT_MALE_4":     23,
		"INWORLD_VOICE_PRESET_ROBOT_MALE_5":     24,
		"INWORLD_VOICE_PRESET_ROBOT_FEMALE_1":   25,
		"INWORLD_VOICE_PRESET_ROBOT_FEMALE_2":   26,
		"INWORLD_VOICE_PRESET_ROBOT_FEMALE_3":   27,
		"INWORLD_VOICE_PRESET_ROBOT_FEMALE_4":   28,
		"INWORLD_VOICE_PRESET_SPIKE":            29,
		"INWORLD_VOICE_PRESET_TWILIGHT":         30,
		"INWORLD_VOICE_PRESET_FLUTTERSHY":       31,
		"INWORLD_VOICE_PRESET_ROBOT_SPIKE":      32,
		"INWORLD_VOICE_PRESET_ROBOT_TWILIGHT":   33,
		"INWORLD_VOICE_PRESET_ROBOT_FLUTTERSHY": 34,
	}
)

func (x VoicePreset) Enum() *VoicePreset {
	p := new(VoicePreset)
	*p = x
	return p
}

func (x VoicePreset) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VoicePreset) Descriptor() protoreflect.EnumDescriptor {
	return file_world_engine_proto_enumTypes[1].Descriptor()
}

func (VoicePreset) Type() protoreflect.EnumType {
	return &file_world_engine_proto_enumTypes[1]
}

func (x VoicePreset) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VoicePreset.Descriptor instead.
func (VoicePreset) EnumDescriptor() ([]byte, []int) {
	return file_world_engine_proto_rawDescGZIP(), []int{1}
}

type PreviousDialog_DialogParticipant int32

const (
	PreviousDialog_UNKNOWN   PreviousDialog_DialogParticipant = 0
	PreviousDialog_PLAYER    PreviousDialog_DialogParticipant = 1
	PreviousDialog_CHARACTER PreviousDialog_DialogParticipant = 2
)

// Enum value maps for PreviousDialog_DialogParticipant.
var (
	PreviousDialog_DialogParticipant_name = map[int32]string{
		0: "UNKNOWN",
		1: "PLAYER",
		2: "CHARACTER",
	}
	PreviousDialog_DialogParticipant_value = map[string]int32{
		"UNKNOWN":   0,
		"PLAYER":    1,
		"CHARACTER": 2,
	}
)

func (x PreviousDialog_DialogParticipant) Enum() *PreviousDialog_DialogParticipant {
	p := new(PreviousDialog_DialogParticipant)
	*p = x
	return p
}

func (x PreviousDialog_DialogParticipant) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PreviousDialog_DialogParticipant) Descriptor() protoreflect.EnumDescriptor {
	return file_world_engine_proto_enumTypes[2].Descriptor()
}

func (PreviousDialog_DialogParticipant) Type() protoreflect.EnumType {
	return &file_world_engine_proto_enumTypes[2]
}

func (x PreviousDialog_DialogParticipant) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PreviousDialog_DialogParticipant.Descriptor instead.
func (PreviousDialog_DialogParticipant) EnumDescriptor() ([]byte, []int) {
	return file_world_engine_proto_rawDescGZIP(), []int{12, 0}
}

type InteractionFeedback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IsLike   bool                     `protobuf:"varint,1,opt,name=isLike,proto3" json:"isLike,omitempty"`
	TypeList []InteractionDislikeType `protobuf:"varint,2,rep,packed,name=typeList,proto3,enum=ai.inworld.engine.InteractionDislikeType" json:"typeList,omitempty"`
	Comment  string                   `protobuf:"bytes,3,opt,name=comment,proto3" json:"comment,omitempty"`
}

func (x *InteractionFeedback) Reset() {
	*x = InteractionFeedback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_engine_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InteractionFeedback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InteractionFeedback) ProtoMessage() {}

func (x *InteractionFeedback) ProtoReflect() protoreflect.Message {
	mi := &file_world_engine_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InteractionFeedback.ProtoReflect.Descriptor instead.
func (*InteractionFeedback) Descriptor() ([]byte, []int) {
	return file_world_engine_proto_rawDescGZIP(), []int{0}
}

func (x *InteractionFeedback) GetIsLike() bool {
	if x != nil {
		return x.IsLike
	}
	return false
}

func (x *InteractionFeedback) GetTypeList() []InteractionDislikeType {
	if x != nil {
		return x.TypeList
	}
	return nil
}

func (x *InteractionFeedback) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type CreateInteractionFeedbackRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parent   string               `protobuf:"bytes,1,opt,name=parent,proto3" json:"parent,omitempty"`
	Feedback *InteractionFeedback `protobuf:"bytes,2,opt,name=feedback,proto3,oneof" json:"feedback,omitempty"`
}

func (x *CreateInteractionFeedbackRequest) Reset() {
	*x = CreateInteractionFeedbackRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_engine_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateInteractionFeedbackRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateInteractionFeedbackRequest) ProtoMessage() {}

func (x *CreateInteractionFeedbackRequest) ProtoReflect() protoreflect.Message {
	mi := &file_world_engine_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateInteractionFeedbackRequest.ProtoReflect.Descriptor instead.
func (*CreateInteractionFeedbackRequest) Descriptor() ([]byte, []int) {
	return file_world_engine_proto_rawDescGZIP(), []int{1}
}

func (x *CreateInteractionFeedbackRequest) GetParent() string {
	if x != nil {
		return x.Parent
	}
	return ""
}

func (x *CreateInteractionFeedbackRequest) GetFeedback() *InteractionFeedback {
	if x != nil {
		return x.Feedback
	}
	return nil
}

type PingCharacterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *PingCharacterRequest) Reset() {
	*x = PingCharacterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_engine_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingCharacterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingCharacterRequest) ProtoMessage() {}

func (x *PingCharacterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_world_engine_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingCharacterRequest.ProtoReflect.Descriptor instead.
func (*PingCharacterRequest) Descriptor() ([]byte, []int) {
	return file_world_engine_proto_rawDescGZIP(), []int{2}
}

func (x *PingCharacterRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type CapabilitiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Audio               bool `protobuf:"varint,1,opt,name=audio,proto3" json:"audio,omitempty"`
	Text                bool `protobuf:"varint,2,opt,name=text,proto3" json:"text,omitempty"`
	Gestures            bool `protobuf:"varint,3,opt,name=gestures,proto3" json:"gestures,omitempty"`
	Interruptions       bool `protobuf:"varint,4,opt,name=interruptions,proto3" json:"interruptions,omitempty"`
	Triggers            bool `protobuf:"varint,5,opt,name=triggers,proto3" json:"triggers,omitempty"`
	Emotions            bool `protobuf:"varint,6,opt,name=emotions,proto3" json:"emotions,omitempty"`
	Animations          bool `protobuf:"varint,7,opt,name=animations,proto3" json:"animations,omitempty"`
	TurnBasedStt        bool `protobuf:"varint,8,opt,name=turnBasedStt,proto3" json:"turnBasedStt,omitempty"`
	EmotionStreaming    bool `protobuf:"varint,9,opt,name=emotionStreaming,proto3" json:"emotionStreaming,omitempty"`
	SilenceEvents       bool `protobuf:"varint,10,opt,name=silenceEvents,proto3" json:"silenceEvents,omitempty"`
	PhonemeInfo         bool `protobuf:"varint,11,opt,name=phonemeInfo,proto3" json:"phonemeInfo,omitempty"`
	Continuation        bool `protobuf:"varint,12,opt,name=continuation,proto3" json:"continuation,omitempty"`
	SessionCancellation bool `protobuf:"varint,13,opt,name=sessionCancellation,proto3" json:"sessionCancellation,omitempty"`
	NarratedAction      bool `protobuf:"varint,14,opt,name=narratedAction,proto3" json:"narratedAction,omitempty"`
	RegenerateResponse  bool `protobuf:"varint,15,opt,name=regenerateResponse,proto3" json:"regenerateResponse,omitempty"`
	LoadSceneInSession  bool `protobuf:"varint,16,opt,name=loadSceneInSession,proto3" json:"loadSceneInSession,omitempty"`
}

func (x *CapabilitiesRequest) Reset() {
	*x = CapabilitiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_engine_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CapabilitiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CapabilitiesRequest) ProtoMessage() {}

func (x *CapabilitiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_world_engine_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CapabilitiesRequest.ProtoReflect.Descriptor instead.
func (*CapabilitiesRequest) Descriptor() ([]byte, []int) {
	return file_world_engine_proto_rawDescGZIP(), []int{3}
}

func (x *CapabilitiesRequest) GetAudio() bool {
	if x != nil {
		return x.Audio
	}
	return false
}

func (x *CapabilitiesRequest) GetText() bool {
	if x != nil {
		return x.Text
	}
	return false
}

func (x *CapabilitiesRequest) GetGestures() bool {
	if x != nil {
		return x.Gestures
	}
	return false
}

func (x *CapabilitiesRequest) GetInterruptions() bool {
	if x != nil {
		return x.Interruptions
	}
	return false
}

func (x *CapabilitiesRequest) GetTriggers() bool {
	if x != nil {
		return x.Triggers
	}
	return false
}

func (x *CapabilitiesRequest) GetEmotions() bool {
	if x != nil {
		return x.Emotions
	}
	return false
}

func (x *CapabilitiesRequest) GetAnimations() bool {
	if x != nil {
		return x.Animations
	}
	return false
}

func (x *CapabilitiesRequest) GetTurnBasedStt() bool {
	if x != nil {
		return x.TurnBasedStt
	}
	return false
}

func (x *CapabilitiesRequest) GetEmotionStreaming() bool {
	if x != nil {
		return x.EmotionStreaming
	}
	return false
}

func (x *CapabilitiesRequest) GetSilenceEvents() bool {
	if x != nil {
		return x.SilenceEvents
	}
	return false
}

func (x *CapabilitiesRequest) GetPhonemeInfo() bool {
	if x != nil {
		return x.PhonemeInfo
	}
	return false
}

func (x *CapabilitiesRequest) GetContinuation() bool {
	if x != nil {
		return x.Continuation
	}
	return false
}

func (x *CapabilitiesRequest) GetSessionCancellation() bool {
	if x != nil {
		return x.SessionCancellation
	}
	return false
}

func (x *CapabilitiesRequest) GetNarratedAction() bool {
	if x != nil {
		return x.NarratedAction
	}
	return false
}

func (x *CapabilitiesRequest) GetRegenerateResponse() bool {
	if x != nil {
		return x.RegenerateResponse
	}
	return false
}

func (x *CapabilitiesRequest) GetLoadSceneInSession() bool {
	if x != nil {
		return x.LoadSceneInSession
	}
	return false
}

type UserRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Id   string `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *UserRequest) Reset() {
	*x = UserRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_engine_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRequest) ProtoMessage() {}

func (x *UserRequest) ProtoReflect() protoreflect.Message {
	mi := &file_world_engine_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRequest.ProtoReflect.Descriptor instead.
func (*UserRequest) Descriptor() ([]byte, []int) {
	return file_world_engine_proto_rawDescGZIP(), []int{4}
}

func (x *UserRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type ClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ClientRequest) Reset() {
	*x = ClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_engine_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientRequest) ProtoMessage() {}

func (x *ClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_world_engine_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientRequest.ProtoReflect.Descriptor instead.
func (*ClientRequest) Descriptor() ([]byte, []int) {
	return file_world_engine_proto_rawDescGZIP(), []int{5}
}

func (x *ClientRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ClientRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type CreateWorldRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProtoWorldName          string                                   `protobuf:"bytes,1,opt,name=protoWorldName,proto3" json:"protoWorldName,omitempty"`
	CreateAgentRequestsList []*CreateWorldRequest_CreateAgentRequest `protobuf:"bytes,2,rep,name=createAgentRequestsList,proto3" json:"createAgentRequestsList,omitempty"`
	Capabilities            *CapabilitiesRequest                     `protobuf:"bytes,3,opt,name=capabilities,proto3,oneof" json:"capabilities,omitempty"`
	User                    *UserRequest                             `protobuf:"bytes,4,opt,name=user,proto3,oneof" json:"user,omitempty"`
	Client                  *ClientRequest                           `protobuf:"bytes,5,opt,name=client,proto3,oneof" json:"client,omitempty"` // the source puts the message as CreateWorldRequest.ClientRequest, but i dont think thats needed
}

func (x *CreateWorldRequest) Reset() {
	*x = CreateWorldRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_engine_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWorldRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorldRequest) ProtoMessage() {}

func (x *CreateWorldRequest) ProtoReflect() protoreflect.Message {
	mi := &file_world_engine_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorldRequest.ProtoReflect.Descriptor instead.
func (*CreateWorldRequest) Descriptor() ([]byte, []int) {
	return file_world_engine_proto_rawDescGZIP(), []int{6}
}

func (x *CreateWorldRequest) GetProtoWorldName() string {
	if x != nil {
		return x.ProtoWorldName
	}
	return ""
}

func (x *CreateWorldRequest) GetCreateAgentRequestsList() []*CreateWorldRequest_CreateAgentRequest {
	if x != nil {
		return x.CreateAgentRequestsList
	}
	return nil
}

func (x *CreateWorldRequest) GetCapabilities() *CapabilitiesRequest {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *CreateWorldRequest) GetUser() *UserRequest {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *CreateWorldRequest) GetClient() *ClientRequest {
	if x != nil {
		return x.Client
	}
	return nil
}

type CreateWorldResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentsList []*CreateWorldResponse_Agent `protobuf:"bytes,1,rep,name=agentsList,proto3" json:"agentsList,omitempty"`
	Key        string                       `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *CreateWorldResponse) Reset() {
	*x = CreateWorldResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_engine_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWorldResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorldResponse) ProtoMessage() {}

func (x *CreateWorldResponse) ProtoReflect() protoreflect.Message {
	mi := &file_world_engine_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorldResponse.ProtoReflect.Descriptor instead.
func (*CreateWorldResponse) Descriptor() ([]byte, []int) {
	return file_world_engine_proto_rawDescGZIP(), []int{7}
}

func (x *CreateWorldResponse) GetAgentsList() []*CreateWorldResponse_Agent {
	if x != nil {
		return x.AgentsList
	}
	return nil
}

func (x *CreateWorldResponse) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type LoadSceneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                string               `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Capabilities        *CapabilitiesRequest `protobuf:"bytes,2,opt,name=capabilities,proto3,oneof" json:"capabilities,omitempty"`
	User                *UserRequest         `protobuf:"bytes,3,opt,name=user,proto3,oneof" json:"user,omitempty"`
	Client              *ClientRequest       `protobuf:"bytes,4,opt,name=client,proto3,oneof" json:"client,omitempty"`
	AudioSettings       *AudioSettings       `protobuf:"bytes,5,opt,name=audioSettings,proto3,oneof" json:"audioSettings,omitempty"`
	UserSettings        *UserSettings        `protobuf:"bytes,6,opt,name=userSettings,proto3,oneof" json:"userSettings,omitempty"`
	SessionContinuation *SessionContinuation `protobuf:"bytes,7,opt,name=sessionContinuation,proto3,oneof" json:"sessionContinuation,omitempty"`
}

func (x *LoadSceneRequest) Reset() {
	*x = LoadSceneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_engine_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadSceneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadSceneRequest) ProtoMessage() {}

func (x *LoadSceneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_world_engine_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadSceneRequest.ProtoReflect.Descriptor instead.
func (*LoadSceneRequest) Descriptor() ([]byte, []int) {
	return file_world_engine_proto_rawDescGZIP(), []int{8}
}

func (x *LoadSceneRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *LoadSceneRequest) GetCapabilities() *CapabilitiesRequest {
	if x != nil {
		return x.Capabilities
	}
	return nil
}

func (x *LoadSceneRequest) GetUser() *UserRequest {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *LoadSceneRequest) GetClient() *ClientRequest {
	if x != nil {
		return x.Client
	}
	return nil
}

func (x *LoadSceneRequest) GetAudioSettings() *AudioSettings {
	if x != nil {
		return x.AudioSettings
	}
	return nil
}

func (x *LoadSceneRequest) GetUserSettings() *UserSettings {
	if x != nil {
		return x.UserSettings
	}
	return nil
}

func (x *LoadSceneRequest) GetSessionContinuation() *SessionContinuation {
	if x != nil {
		return x.SessionContinuation
	}
	return nil
}

type AudioSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SttSampleRateHertz uint32 `protobuf:"varint,1,opt,name=sttSampleRateHertz,proto3" json:"sttSampleRateHertz,omitempty"`
	TtsSampleRateHertz uint32 `protobuf:"varint,2,opt,name=ttsSampleRateHertz,proto3" json:"ttsSampleRateHertz,omitempty"`
}

func (x *AudioSettings) Reset() {
	*x = AudioSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_engine_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioSettings) ProtoMessage() {}

func (x *AudioSettings) ProtoReflect() protoreflect.Message {
	mi := &file_world_engine_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioSettings.ProtoReflect.Descriptor instead.
func (*AudioSettings) Descriptor() ([]byte, []int) {
	return file_world_engine_proto_rawDescGZIP(), []int{9}
}

func (x *AudioSettings) GetSttSampleRateHertz() uint32 {
	if x != nil {
		return x.SttSampleRateHertz
	}
	return 0
}

func (x *AudioSettings) GetTtsSampleRateHertz() uint32 {
	if x != nil {
		return x.TtsSampleRateHertz
	}
	return 0
}

type UserSettings struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ViewTranscriptContent bool `protobuf:"varint,1,opt,name=viewTranscriptContent,proto3" json:"viewTranscriptContent,omitempty"`
}

func (x *UserSettings) Reset() {
	*x = UserSettings{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_engine_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserSettings) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserSettings) ProtoMessage() {}

func (x *UserSettings) ProtoReflect() protoreflect.Message {
	mi := &file_world_engine_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserSettings.ProtoReflect.Descriptor instead.
func (*UserSettings) Descriptor() ([]byte, []int) {
	return file_world_engine_proto_rawDescGZIP(), []int{10}
}

func (x *UserSettings) GetViewTranscriptContent() bool {
	if x != nil {
		return x.ViewTranscriptContent
	}
	return false
}

type SessionContinuation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ContinuationInfo *SessionContinuation_ContinuationInfo `protobuf:"bytes,1,opt,name=continuationInfo,proto3" json:"continuationInfo,omitempty"`
	PreviousDialog   *PreviousDialog                       `protobuf:"bytes,2,opt,name=previousDialog,proto3" json:"previousDialog,omitempty"`
	PreviousState    []byte                                `protobuf:"bytes,3,opt,name=previousState,proto3" json:"previousState,omitempty"`
}

func (x *SessionContinuation) Reset() {
	*x = SessionContinuation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_engine_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionContinuation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionContinuation) ProtoMessage() {}

func (x *SessionContinuation) ProtoReflect() protoreflect.Message {
	mi := &file_world_engine_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionContinuation.ProtoReflect.Descriptor instead.
func (*SessionContinuation) Descriptor() ([]byte, []int) {
	return file_world_engine_proto_rawDescGZIP(), []int{11}
}

func (x *SessionContinuation) GetContinuationInfo() *SessionContinuation_ContinuationInfo {
	if x != nil {
		return x.ContinuationInfo
	}
	return nil
}

func (x *SessionContinuation) GetPreviousDialog() *PreviousDialog {
	if x != nil {
		return x.PreviousDialog
	}
	return nil
}

func (x *SessionContinuation) GetPreviousState() []byte {
	if x != nil {
		return x.PreviousState
	}
	return nil
}

type PreviousDialog struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PhrasesList []*PreviousDialog_Phrase `protobuf:"bytes,1,rep,name=phrasesList,proto3" json:"phrasesList,omitempty"`
}

func (x *PreviousDialog) Reset() {
	*x = PreviousDialog{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_engine_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreviousDialog) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreviousDialog) ProtoMessage() {}

func (x *PreviousDialog) ProtoReflect() protoreflect.Message {
	mi := &file_world_engine_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreviousDialog.ProtoReflect.Descriptor instead.
func (*PreviousDialog) Descriptor() ([]byte, []int) {
	return file_world_engine_proto_rawDescGZIP(), []int{12}
}

func (x *PreviousDialog) GetPhrasesList() []*PreviousDialog_Phrase {
	if x != nil {
		return x.PhrasesList
	}
	return nil
}

type PreviousState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StateHolderList []*PreviousState_StateHolder `protobuf:"bytes,1,rep,name=stateHolderList,proto3" json:"stateHolderList,omitempty"`
}

func (x *PreviousState) Reset() {
	*x = PreviousState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_engine_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreviousState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreviousState) ProtoMessage() {}

func (x *PreviousState) ProtoReflect() protoreflect.Message {
	mi := &file_world_engine_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreviousState.ProtoReflect.Descriptor instead.
func (*PreviousState) Descriptor() ([]byte, []int) {
	return file_world_engine_proto_rawDescGZIP(), []int{13}
}

func (x *PreviousState) GetStateHolderList() []*PreviousState_StateHolder {
	if x != nil {
		return x.StateHolderList
	}
	return nil
}

type LoadSceneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentsList    []*LoadSceneResponse_Agent `protobuf:"bytes,1,rep,name=agentsList,proto3" json:"agentsList,omitempty"`
	Key           string                     `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
	PreviousState *string                    `protobuf:"bytes,3,opt,name=previousState,proto3,oneof" json:"previousState,omitempty"`
}

func (x *LoadSceneResponse) Reset() {
	*x = LoadSceneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_engine_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadSceneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadSceneResponse) ProtoMessage() {}

func (x *LoadSceneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_world_engine_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadSceneResponse.ProtoReflect.Descriptor instead.
func (*LoadSceneResponse) Descriptor() ([]byte, []int) {
	return file_world_engine_proto_rawDescGZIP(), []int{14}
}

func (x *LoadSceneResponse) GetAgentsList() []*LoadSceneResponse_Agent {
	if x != nil {
		return x.AgentsList
	}
	return nil
}

func (x *LoadSceneResponse) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *LoadSceneResponse) GetPreviousState() string {
	if x != nil && x.PreviousState != nil {
		return *x.PreviousState
	}
	return ""
}

type LogErrorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key     string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *LogErrorRequest) Reset() {
	*x = LogErrorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_engine_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogErrorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogErrorRequest) ProtoMessage() {}

func (x *LogErrorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_world_engine_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogErrorRequest.ProtoReflect.Descriptor instead.
func (*LogErrorRequest) Descriptor() ([]byte, []int) {
	return file_world_engine_proto_rawDescGZIP(), []int{15}
}

func (x *LogErrorRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *LogErrorRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type VoicePreviewRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text     string                `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Emotions *packets.EmotionEvent `protobuf:"bytes,2,opt,name=emotions,proto3,oneof" json:"emotions,omitempty"`
	Voice    *voices.Voice         `protobuf:"bytes,3,opt,name=voice,proto3,oneof" json:"voice,omitempty"`
}

func (x *VoicePreviewRequest) Reset() {
	*x = VoicePreviewRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_engine_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoicePreviewRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoicePreviewRequest) ProtoMessage() {}

func (x *VoicePreviewRequest) ProtoReflect() protoreflect.Message {
	mi := &file_world_engine_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoicePreviewRequest.ProtoReflect.Descriptor instead.
func (*VoicePreviewRequest) Descriptor() ([]byte, []int) {
	return file_world_engine_proto_rawDescGZIP(), []int{16}
}

func (x *VoicePreviewRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *VoicePreviewRequest) GetEmotions() *packets.EmotionEvent {
	if x != nil {
		return x.Emotions
	}
	return nil
}

func (x *VoicePreviewRequest) GetVoice() *voices.Voice {
	if x != nil {
		return x.Voice
	}
	return nil
}

type VoicePreviewResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Audio []byte `protobuf:"bytes,1,opt,name=audio,proto3" json:"audio,omitempty"`
}

func (x *VoicePreviewResponse) Reset() {
	*x = VoicePreviewResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_engine_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoicePreviewResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoicePreviewResponse) ProtoMessage() {}

func (x *VoicePreviewResponse) ProtoReflect() protoreflect.Message {
	mi := &file_world_engine_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoicePreviewResponse.ProtoReflect.Descriptor instead.
func (*VoicePreviewResponse) Descriptor() ([]byte, []int) {
	return file_world_engine_proto_rawDescGZIP(), []int{17}
}

func (x *VoicePreviewResponse) GetAudio() []byte {
	if x != nil {
		return x.Audio
	}
	return nil
}

type ListBaseVoicesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LanguageCode string           `protobuf:"bytes,1,opt,name=languageCode,proto3" json:"languageCode,omitempty"`
	TtsTypesList []voices.TTSType `protobuf:"varint,2,rep,packed,name=ttsTypesList,proto3,enum=ai.inworld.voices.TTSType" json:"ttsTypesList,omitempty"`
}

func (x *ListBaseVoicesRequest) Reset() {
	*x = ListBaseVoicesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_engine_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBaseVoicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBaseVoicesRequest) ProtoMessage() {}

func (x *ListBaseVoicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_world_engine_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBaseVoicesRequest.ProtoReflect.Descriptor instead.
func (*ListBaseVoicesRequest) Descriptor() ([]byte, []int) {
	return file_world_engine_proto_rawDescGZIP(), []int{18}
}

func (x *ListBaseVoicesRequest) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *ListBaseVoicesRequest) GetTtsTypesList() []voices.TTSType {
	if x != nil {
		return x.TtsTypesList
	}
	return nil
}

type ListBaseVoicesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GooglevoicesList  []*ListBaseVoicesResponse_BaseVoice `protobuf:"bytes,1,rep,name=googlevoicesList,proto3" json:"googlevoicesList,omitempty"`
	InworldvoicesList []*ListBaseVoicesResponse_BaseVoice `protobuf:"bytes,2,rep,name=inworldvoicesList,proto3" json:"inworldvoicesList,omitempty"`
}

func (x *ListBaseVoicesResponse) Reset() {
	*x = ListBaseVoicesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_engine_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBaseVoicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBaseVoicesResponse) ProtoMessage() {}

func (x *ListBaseVoicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_world_engine_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBaseVoicesResponse.ProtoReflect.Descriptor instead.
func (*ListBaseVoicesResponse) Descriptor() ([]byte, []int) {
	return file_world_engine_proto_rawDescGZIP(), []int{19}
}

func (x *ListBaseVoicesResponse) GetGooglevoicesList() []*ListBaseVoicesResponse_BaseVoice {
	if x != nil {
		return x.GooglevoicesList
	}
	return nil
}

func (x *ListBaseVoicesResponse) GetInworldvoicesList() []*ListBaseVoicesResponse_BaseVoice {
	if x != nil {
		return x.InworldvoicesList
	}
	return nil
}

type AccessToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token          string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Type           string                 `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	ExpirationTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=expirationTime,proto3,oneof" json:"expirationTime,omitempty"`
	SessionId      string                 `protobuf:"bytes,4,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
}

func (x *AccessToken) Reset() {
	*x = AccessToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_engine_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AccessToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AccessToken) ProtoMessage() {}

func (x *AccessToken) ProtoReflect() protoreflect.Message {
	mi := &file_world_engine_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AccessToken.ProtoReflect.Descriptor instead.
func (*AccessToken) Descriptor() ([]byte, []int) {
	return file_world_engine_proto_rawDescGZIP(), []int{20}
}

func (x *AccessToken) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *AccessToken) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AccessToken) GetExpirationTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpirationTime
	}
	return nil
}

func (x *AccessToken) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type GenerateTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GenerateTokenRequest) Reset() {
	*x = GenerateTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_engine_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GenerateTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenerateTokenRequest) ProtoMessage() {}

func (x *GenerateTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_world_engine_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenerateTokenRequest.ProtoReflect.Descriptor instead.
func (*GenerateTokenRequest) Descriptor() ([]byte, []int) {
	return file_world_engine_proto_rawDescGZIP(), []int{21}
}

func (x *GenerateTokenRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type CreateWorldRequest_CreateAgentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrainName    string      `protobuf:"bytes,1,opt,name=brainName,proto3" json:"brainName,omitempty"`
	LanguageCode string      `protobuf:"bytes,2,opt,name=languageCode,proto3" json:"languageCode,omitempty"`
	VoicePreset  VoicePreset `protobuf:"varint,3,opt,name=voicePreset,proto3,enum=ai.inworld.engine.VoicePreset" json:"voicePreset,omitempty"`
}

func (x *CreateWorldRequest_CreateAgentRequest) Reset() {
	*x = CreateWorldRequest_CreateAgentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_engine_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWorldRequest_CreateAgentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorldRequest_CreateAgentRequest) ProtoMessage() {}

func (x *CreateWorldRequest_CreateAgentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_world_engine_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorldRequest_CreateAgentRequest.ProtoReflect.Descriptor instead.
func (*CreateWorldRequest_CreateAgentRequest) Descriptor() ([]byte, []int) {
	return file_world_engine_proto_rawDescGZIP(), []int{6, 0}
}

func (x *CreateWorldRequest_CreateAgentRequest) GetBrainName() string {
	if x != nil {
		return x.BrainName
	}
	return ""
}

func (x *CreateWorldRequest_CreateAgentRequest) GetLanguageCode() string {
	if x != nil {
		return x.LanguageCode
	}
	return ""
}

func (x *CreateWorldRequest_CreateAgentRequest) GetVoicePreset() VoicePreset {
	if x != nil {
		return x.VoicePreset
	}
	return VoicePreset_VOICE_PRESET_UNSPECIFIED
}

type CreateWorldResponse_Agent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId   string `protobuf:"bytes,1,opt,name=agentId,proto3" json:"agentId,omitempty"`
	BrainName string `protobuf:"bytes,2,opt,name=brainName,proto3" json:"brainName,omitempty"`
}

func (x *CreateWorldResponse_Agent) Reset() {
	*x = CreateWorldResponse_Agent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_engine_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWorldResponse_Agent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWorldResponse_Agent) ProtoMessage() {}

func (x *CreateWorldResponse_Agent) ProtoReflect() protoreflect.Message {
	mi := &file_world_engine_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWorldResponse_Agent.ProtoReflect.Descriptor instead.
func (*CreateWorldResponse_Agent) Descriptor() ([]byte, []int) {
	return file_world_engine_proto_rawDescGZIP(), []int{7, 0}
}

func (x *CreateWorldResponse_Agent) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *CreateWorldResponse_Agent) GetBrainName() string {
	if x != nil {
		return x.BrainName
	}
	return ""
}

type SessionContinuation_ContinuationInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MillisPassed int64 `protobuf:"varint,1,opt,name=millisPassed,proto3" json:"millisPassed,omitempty"`
}

func (x *SessionContinuation_ContinuationInfo) Reset() {
	*x = SessionContinuation_ContinuationInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_engine_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionContinuation_ContinuationInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionContinuation_ContinuationInfo) ProtoMessage() {}

func (x *SessionContinuation_ContinuationInfo) ProtoReflect() protoreflect.Message {
	mi := &file_world_engine_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionContinuation_ContinuationInfo.ProtoReflect.Descriptor instead.
func (*SessionContinuation_ContinuationInfo) Descriptor() ([]byte, []int) {
	return file_world_engine_proto_rawDescGZIP(), []int{11, 0}
}

func (x *SessionContinuation_ContinuationInfo) GetMillisPassed() int64 {
	if x != nil {
		return x.MillisPassed
	}
	return 0
}

type PreviousDialog_Phrase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Talker PreviousDialog_DialogParticipant `protobuf:"varint,1,opt,name=talker,proto3,enum=ai.inworld.engine.PreviousDialog_DialogParticipant" json:"talker,omitempty"`
	Phrase string                           `protobuf:"bytes,2,opt,name=phrase,proto3" json:"phrase,omitempty"`
}

func (x *PreviousDialog_Phrase) Reset() {
	*x = PreviousDialog_Phrase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_engine_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreviousDialog_Phrase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreviousDialog_Phrase) ProtoMessage() {}

func (x *PreviousDialog_Phrase) ProtoReflect() protoreflect.Message {
	mi := &file_world_engine_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreviousDialog_Phrase.ProtoReflect.Descriptor instead.
func (*PreviousDialog_Phrase) Descriptor() ([]byte, []int) {
	return file_world_engine_proto_rawDescGZIP(), []int{12, 0}
}

func (x *PreviousDialog_Phrase) GetTalker() PreviousDialog_DialogParticipant {
	if x != nil {
		return x.Talker
	}
	return PreviousDialog_UNKNOWN
}

func (x *PreviousDialog_Phrase) GetPhrase() string {
	if x != nil {
		return x.Phrase
	}
	return ""
}

type PreviousState_StateHolder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrainName      string                   `protobuf:"bytes,1,opt,name=brainName,proto3" json:"brainName,omitempty"`
	State          []byte                   `protobuf:"bytes,2,opt,name=state,proto3" json:"state,omitempty"`
	PreviousDialog *PreviousDialog          `protobuf:"bytes,3,opt,name=previousDialog,proto3,oneof" json:"previousDialog,omitempty"`
	PacketList     []*packets.InworldPacket `protobuf:"bytes,4,rep,name=packetList,proto3" json:"packetList,omitempty"`
}

func (x *PreviousState_StateHolder) Reset() {
	*x = PreviousState_StateHolder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_engine_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreviousState_StateHolder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreviousState_StateHolder) ProtoMessage() {}

func (x *PreviousState_StateHolder) ProtoReflect() protoreflect.Message {
	mi := &file_world_engine_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreviousState_StateHolder.ProtoReflect.Descriptor instead.
func (*PreviousState_StateHolder) Descriptor() ([]byte, []int) {
	return file_world_engine_proto_rawDescGZIP(), []int{13, 0}
}

func (x *PreviousState_StateHolder) GetBrainName() string {
	if x != nil {
		return x.BrainName
	}
	return ""
}

func (x *PreviousState_StateHolder) GetState() []byte {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *PreviousState_StateHolder) GetPreviousDialog() *PreviousDialog {
	if x != nil {
		return x.PreviousDialog
	}
	return nil
}

func (x *PreviousState_StateHolder) GetPacketList() []*packets.InworldPacket {
	if x != nil {
		return x.PacketList
	}
	return nil
}

type LoadSceneResponse_Agent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AgentId         string                                   `protobuf:"bytes,1,opt,name=agentId,proto3" json:"agentId,omitempty"`
	BrainName       string                                   `protobuf:"bytes,2,opt,name=brainName,proto3" json:"brainName,omitempty"`
	GivenNAme       string                                   `protobuf:"bytes,3,opt,name=givenNAme,proto3" json:"givenNAme,omitempty"`
	CharacterAssets *LoadSceneResponse_Agent_CharacterAssets `protobuf:"bytes,4,opt,name=characterAssets,proto3" json:"characterAssets,omitempty"`
}

func (x *LoadSceneResponse_Agent) Reset() {
	*x = LoadSceneResponse_Agent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_engine_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadSceneResponse_Agent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadSceneResponse_Agent) ProtoMessage() {}

func (x *LoadSceneResponse_Agent) ProtoReflect() protoreflect.Message {
	mi := &file_world_engine_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadSceneResponse_Agent.ProtoReflect.Descriptor instead.
func (*LoadSceneResponse_Agent) Descriptor() ([]byte, []int) {
	return file_world_engine_proto_rawDescGZIP(), []int{14, 0}
}

func (x *LoadSceneResponse_Agent) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *LoadSceneResponse_Agent) GetBrainName() string {
	if x != nil {
		return x.BrainName
	}
	return ""
}

func (x *LoadSceneResponse_Agent) GetGivenNAme() string {
	if x != nil {
		return x.GivenNAme
	}
	return ""
}

func (x *LoadSceneResponse_Agent) GetCharacterAssets() *LoadSceneResponse_Agent_CharacterAssets {
	if x != nil {
		return x.CharacterAssets
	}
	return nil
}

type LoadSceneResponse_Agent_CharacterAssets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RpmModelUri         string `protobuf:"bytes,1,opt,name=rpmModelUri,proto3" json:"rpmModelUri,omitempty"`
	RpmImageUriPortrait string `protobuf:"bytes,2,opt,name=rpmImageUriPortrait,proto3" json:"rpmImageUriPortrait,omitempty"`
	RpmImageUriPosture  string `protobuf:"bytes,3,opt,name=rpmImageUriPosture,proto3" json:"rpmImageUriPosture,omitempty"`
	AvatarImg           string `protobuf:"bytes,4,opt,name=avatarImg,proto3" json:"avatarImg,omitempty"`
	AvatarImgOriginal   string `protobuf:"bytes,5,opt,name=avatarImgOriginal,proto3" json:"avatarImgOriginal,omitempty"`
}

func (x *LoadSceneResponse_Agent_CharacterAssets) Reset() {
	*x = LoadSceneResponse_Agent_CharacterAssets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_engine_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadSceneResponse_Agent_CharacterAssets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadSceneResponse_Agent_CharacterAssets) ProtoMessage() {}

func (x *LoadSceneResponse_Agent_CharacterAssets) ProtoReflect() protoreflect.Message {
	mi := &file_world_engine_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadSceneResponse_Agent_CharacterAssets.ProtoReflect.Descriptor instead.
func (*LoadSceneResponse_Agent_CharacterAssets) Descriptor() ([]byte, []int) {
	return file_world_engine_proto_rawDescGZIP(), []int{14, 0, 0}
}

func (x *LoadSceneResponse_Agent_CharacterAssets) GetRpmModelUri() string {
	if x != nil {
		return x.RpmModelUri
	}
	return ""
}

func (x *LoadSceneResponse_Agent_CharacterAssets) GetRpmImageUriPortrait() string {
	if x != nil {
		return x.RpmImageUriPortrait
	}
	return ""
}

func (x *LoadSceneResponse_Agent_CharacterAssets) GetRpmImageUriPosture() string {
	if x != nil {
		return x.RpmImageUriPosture
	}
	return ""
}

func (x *LoadSceneResponse_Agent_CharacterAssets) GetAvatarImg() string {
	if x != nil {
		return x.AvatarImg
	}
	return ""
}

func (x *LoadSceneResponse_Agent_CharacterAssets) GetAvatarImgOriginal() string {
	if x != nil {
		return x.AvatarImgOriginal
	}
	return ""
}

type ListBaseVoicesResponse_BaseVoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LanguageCodeList    []string      `protobuf:"bytes,1,rep,name=languageCodeList,proto3" json:"languageCodeList,omitempty"`
	Name                string        `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Gender              voices.Gender `protobuf:"varint,3,opt,name=gender,proto3,enum=ai.inworld.voices.Gender" json:"gender,omitempty"`
	Naturalsamplerhertz int32         `protobuf:"varint,4,opt,name=naturalsamplerhertz,proto3" json:"naturalsamplerhertz,omitempty"`
}

func (x *ListBaseVoicesResponse_BaseVoice) Reset() {
	*x = ListBaseVoicesResponse_BaseVoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_world_engine_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListBaseVoicesResponse_BaseVoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListBaseVoicesResponse_BaseVoice) ProtoMessage() {}

func (x *ListBaseVoicesResponse_BaseVoice) ProtoReflect() protoreflect.Message {
	mi := &file_world_engine_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListBaseVoicesResponse_BaseVoice.ProtoReflect.Descriptor instead.
func (*ListBaseVoicesResponse_BaseVoice) Descriptor() ([]byte, []int) {
	return file_world_engine_proto_rawDescGZIP(), []int{19, 0}
}

func (x *ListBaseVoicesResponse_BaseVoice) GetLanguageCodeList() []string {
	if x != nil {
		return x.LanguageCodeList
	}
	return nil
}

func (x *ListBaseVoicesResponse_BaseVoice) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ListBaseVoicesResponse_BaseVoice) GetGender() voices.Gender {
	if x != nil {
		return x.Gender
	}
	return voices.Gender(0)
}

func (x *ListBaseVoicesResponse_BaseVoice) GetNaturalsamplerhertz() int32 {
	if x != nil {
		return x.Naturalsamplerhertz
	}
	return 0
}

var File_world_engine_proto protoreflect.FileDescriptor

var file_world_engine_proto_rawDesc = []byte{
	0x0a, 0x12, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2d, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x11, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x8e, 0x01, 0x0a, 0x13, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73,
	0x4c, 0x69, 0x6b, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4c, 0x69,
	0x6b, 0x65, 0x12, 0x45, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c,
	0x64, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x6c, 0x69, 0x6b, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x08, 0x74, 0x79, 0x70, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x22, 0x90, 0x01, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63,
	0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x65,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x12, 0x47, 0x0a, 0x08, 0x66, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x08, 0x66, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x66, 0x65,
	0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x22, 0x2a, 0x0a, 0x14, 0x50, 0x69, 0x6e, 0x67, 0x43, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0xcf, 0x04, 0x0a, 0x13, 0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x75,
	0x64, 0x69, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04,
	0x74, 0x65, 0x78, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x67, 0x65, 0x73, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x67, 0x65, 0x73, 0x74, 0x75, 0x72, 0x65, 0x73,
	0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x72, 0x75,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65,
	0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e,
	0x0a, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x61, 0x6e, 0x69, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x74, 0x75, 0x72, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x64, 0x53, 0x74, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x74, 0x75, 0x72, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x64, 0x53,
	0x74, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72,
	0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x65, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x24,
	0x0a, 0x0d, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x69, 0x6c, 0x65, 0x6e, 0x63, 0x65, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x6d, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x6d, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e,
	0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x63, 0x6f,
	0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e,
	0x6e, 0x61, 0x72, 0x72, 0x61, 0x74, 0x65, 0x64, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x6e, 0x61, 0x72, 0x72, 0x61, 0x74, 0x65, 0x64, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x12, 0x72, 0x65, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x63, 0x65, 0x6e,
	0x65, 0x49, 0x6e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x12, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x49, 0x6e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x22, 0x31, 0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x39, 0x0a, 0x0d, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x22, 0xb9, 0x04, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72,
	0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x72, 0x0a, 0x17, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x38, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72,
	0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x17, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c,
	0x69, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x69,
	0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x43, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74,
	0x69, 0x65, 0x73, 0x88, 0x01, 0x01, 0x12, 0x37, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c,
	0x64, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x01, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12,
	0x3d, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x48, 0x02, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x1a, 0x98,
	0x01, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x69, 0x6e, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x69, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x40, 0x0a, 0x0b, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x61,
	0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x0b, 0x76, 0x6f,
	0x69, 0x63, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x61,
	0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x5f, 0x75,
	0x73, 0x65, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x22, 0xb6,
	0x01, 0x0a, 0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4c, 0x0a, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x69, 0x2e,
	0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x1a, 0x3f, 0x0a, 0x05, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x72, 0x61,
	0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72,
	0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0xc5, 0x04, 0x0a, 0x10, 0x4c, 0x6f, 0x61, 0x64,
	0x53, 0x63, 0x65, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x4f, 0x0a, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f,
	0x72, 0x6c, 0x64, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x43, 0x61, 0x70, 0x61, 0x62,
	0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x0c, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73, 0x88, 0x01,
	0x01, 0x12, 0x37, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1e, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x01, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x88, 0x01, 0x01, 0x12, 0x3d, 0x0a, 0x06, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x69, 0x2e,
	0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x43,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x02, 0x52, 0x06,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x88, 0x01, 0x01, 0x12, 0x4b, 0x0a, 0x0d, 0x61, 0x75, 0x64,
	0x69, 0x6f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e,
	0x67, 0x73, 0x48, 0x03, 0x52, 0x0d, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x65, 0x74, 0x74, 0x69,
	0x6e, 0x67, 0x73, 0x88, 0x01, 0x01, 0x12, 0x48, 0x0a, 0x0c, 0x75, 0x73, 0x65, 0x72, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61,
	0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x48, 0x04, 0x52,
	0x0c, 0x75, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x88, 0x01, 0x01,
	0x12, 0x5d, 0x0a, 0x13, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x69,
	0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e,
	0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x05, 0x52, 0x13, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x88, 0x01, 0x01, 0x42,
	0x0f, 0x0a, 0x0d, 0x5f, 0x63, 0x61, 0x70, 0x61, 0x62, 0x69, 0x6c, 0x69, 0x74, 0x69, 0x65, 0x73,
	0x42, 0x07, 0x0a, 0x05, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x42, 0x09, 0x0a, 0x07, 0x5f, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x42, 0x0f, 0x0a, 0x0d, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x53,
	0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x42, 0x16, 0x0a, 0x14, 0x5f, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22,
	0x6f, 0x0a, 0x0d, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x2e, 0x0a, 0x12, 0x73, 0x74, 0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x61, 0x74,
	0x65, 0x48, 0x65, 0x72, 0x74, 0x7a, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x73, 0x74,
	0x74, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x61, 0x74, 0x65, 0x48, 0x65, 0x72, 0x74, 0x7a,
	0x12, 0x2e, 0x0a, 0x12, 0x74, 0x74, 0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x61, 0x74,
	0x65, 0x48, 0x65, 0x72, 0x74, 0x7a, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x12, 0x74, 0x74,
	0x73, 0x53, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x61, 0x74, 0x65, 0x48, 0x65, 0x72, 0x74, 0x7a,
	0x22, 0x44, 0x0a, 0x0c, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x12, 0x34, 0x0a, 0x15, 0x76, 0x69, 0x65, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x15, 0x76, 0x69, 0x65, 0x77, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x43,
	0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xa3, 0x02, 0x0a, 0x13, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x63,
	0x0a, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x37, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e,
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x10, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6e, 0x66, 0x6f, 0x12, 0x49, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x44,
	0x69, 0x61, 0x6c, 0x6f, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x69,
	0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x52, 0x0e,
	0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x24,
	0x0a, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x1a, 0x36, 0x0a, 0x10, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x69, 0x6c, 0x6c,
	0x69, 0x73, 0x50, 0x61, 0x73, 0x73, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c,
	0x6d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x50, 0x61, 0x73, 0x73, 0x65, 0x64, 0x22, 0x88, 0x02, 0x0a,
	0x0e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x12,
	0x4a, 0x0a, 0x0b, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c,
	0x64, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75,
	0x73, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x50, 0x68, 0x72, 0x61, 0x73, 0x65, 0x52, 0x0b,
	0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x6d, 0x0a, 0x06, 0x50,
	0x68, 0x72, 0x61, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x06, 0x74, 0x61, 0x6c, 0x6b, 0x65, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x33, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72,
	0x6c, 0x64, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f,
	0x75, 0x73, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x2e, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x50,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x52, 0x06, 0x74, 0x61, 0x6c, 0x6b,
	0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x70, 0x68, 0x72, 0x61, 0x73, 0x65, 0x22, 0x3b, 0x0a, 0x11, 0x44, 0x69,
	0x61, 0x6c, 0x6f, 0x67, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x6e, 0x74, 0x12,
	0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06,
	0x50, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x48, 0x41, 0x52,
	0x41, 0x43, 0x54, 0x45, 0x52, 0x10, 0x02, 0x22, 0xd1, 0x02, 0x0a, 0x0d, 0x50, 0x72, 0x65, 0x76,
	0x69, 0x6f, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x56, 0x0a, 0x0f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x52, 0x0f, 0x73, 0x74, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x1a, 0xe7, 0x01, 0x0a, 0x0b, 0x53, 0x74, 0x61, 0x74, 0x65, 0x48, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x72, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05,
	0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x4e, 0x0a, 0x0e, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75,
	0x73, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e,
	0x65, 0x2e, 0x50, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67,
	0x48, 0x00, 0x52, 0x0e, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x44, 0x69, 0x61, 0x6c,
	0x6f, 0x67, 0x88, 0x01, 0x01, 0x12, 0x41, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x69, 0x2e, 0x69,
	0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x49,
	0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x52, 0x0a, 0x70, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x11, 0x0a, 0x0f, 0x5f, 0x70, 0x72, 0x65,
	0x76, 0x69, 0x6f, 0x75, 0x73, 0x44, 0x69, 0x61, 0x6c, 0x6f, 0x67, 0x22, 0xd8, 0x04, 0x0a, 0x11,
	0x4c, 0x6f, 0x61, 0x64, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4a, 0x0a, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72,
	0x6c, 0x64, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x63,
	0x65, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x67, 0x65, 0x6e,
	0x74, 0x52, 0x0a, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12,
	0x29, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f,
	0x75, 0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x88, 0x01, 0x01, 0x1a, 0xa7, 0x03, 0x0a, 0x05, 0x41,
	0x67, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x67, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x62, 0x72, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x62, 0x72, 0x61, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x67, 0x69, 0x76, 0x65, 0x6e, 0x4e, 0x41, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x67, 0x69, 0x76, 0x65, 0x6e, 0x4e, 0x41, 0x6d, 0x65, 0x12, 0x64, 0x0a, 0x0f, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x63, 0x65, 0x6e,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x41, 0x67, 0x65, 0x6e, 0x74, 0x2e,
	0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73, 0x52,
	0x0f, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x41, 0x73, 0x73, 0x65, 0x74, 0x73,
	0x1a, 0xe1, 0x01, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x41, 0x73,
	0x73, 0x65, 0x74, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x70, 0x6d, 0x4d, 0x6f, 0x64, 0x65, 0x6c,
	0x55, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x72, 0x70, 0x6d, 0x4d, 0x6f,
	0x64, 0x65, 0x6c, 0x55, 0x72, 0x69, 0x12, 0x30, 0x0a, 0x13, 0x72, 0x70, 0x6d, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x55, 0x72, 0x69, 0x50, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x13, 0x72, 0x70, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x69,
	0x50, 0x6f, 0x72, 0x74, 0x72, 0x61, 0x69, 0x74, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x70, 0x6d, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x69, 0x50, 0x6f, 0x73, 0x74, 0x75, 0x72, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x72, 0x70, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72,
	0x69, 0x50, 0x6f, 0x73, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x49, 0x6d, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x49, 0x6d, 0x67, 0x12, 0x2c, 0x0a, 0x11, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x49, 0x6d, 0x67, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x11, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x49, 0x6d, 0x67, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x6c, 0x42, 0x10, 0x0a, 0x0e, 0x5f, 0x70, 0x72, 0x65, 0x76, 0x69, 0x6f, 0x75,
	0x73, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x3d, 0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x13, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x50,
	0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x12, 0x41, 0x0a, 0x08, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x45, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x08, 0x65, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x88, 0x01, 0x01, 0x12, 0x33, 0x0a, 0x05, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x48, 0x01, 0x52,
	0x05, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x88, 0x01, 0x01, 0x42, 0x0b, 0x0a, 0x09, 0x5f, 0x65, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x5f, 0x76, 0x6f, 0x69, 0x63, 0x65,
	0x22, 0x2c, 0x0a, 0x14, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x75, 0x64, 0x69,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x22, 0x7b,
	0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x3e, 0x0a, 0x0c, 0x74,
	0x74, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0e, 0x32, 0x1a, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x54, 0x54, 0x53, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x74,
	0x74, 0x73, 0x54, 0x79, 0x70, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x8f, 0x03, 0x0a, 0x16,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5f, 0x0a, 0x10, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x33, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x56, 0x6f, 0x69,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x61, 0x73, 0x65,
	0x56, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x10, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x76, 0x6f, 0x69,
	0x63, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x61, 0x0a, 0x11, 0x69, 0x6e, 0x77, 0x6f, 0x72,
	0x6c, 0x64, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x33, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x56,
	0x6f, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x11, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0xb0, 0x01, 0x0a, 0x09, 0x42,
	0x61, 0x73, 0x65, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6c, 0x61, 0x6e, 0x67,
	0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x10, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x31, 0x0a, 0x06, 0x67, 0x65, 0x6e, 0x64,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e,
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x47, 0x65, 0x6e,
	0x64, 0x65, 0x72, 0x52, 0x06, 0x67, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x13, 0x6e,
	0x61, 0x74, 0x75, 0x72, 0x61, 0x6c, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x68, 0x65, 0x72,
	0x74, 0x7a, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x61,
	0x6c, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x72, 0x68, 0x65, 0x72, 0x74, 0x7a, 0x22, 0xb1, 0x01,
	0x0a, 0x0b, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x47, 0x0a, 0x0e, 0x65, 0x78, 0x70, 0x69, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x48, 0x00, 0x52, 0x0e, 0x65,
	0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x88, 0x01, 0x01,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x42, 0x11,
	0x0a, 0x0f, 0x5f, 0x65, 0x78, 0x70, 0x69, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x22, 0x28, 0x0a, 0x14, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x2a, 0x9b, 0x02, 0x0a, 0x16,
	0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x69, 0x73, 0x6c, 0x69,
	0x6b, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x44, 0x49, 0x53, 0x4c, 0x49, 0x4b,
	0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x1b, 0x0a, 0x17, 0x44, 0x49, 0x53, 0x4c, 0x49, 0x4b, 0x45, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x52, 0x52, 0x45, 0x4c, 0x45, 0x56, 0x41, 0x4e, 0x54, 0x10,
	0x01, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x49, 0x53, 0x4c, 0x49, 0x4b, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x4e, 0x53, 0x41, 0x46, 0x45, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x49,
	0x53, 0x4c, 0x49, 0x4b, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x54, 0x52, 0x55,
	0x45, 0x10, 0x03, 0x12, 0x28, 0x0a, 0x24, 0x44, 0x49, 0x53, 0x4c, 0x49, 0x4b, 0x45, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x43, 0x4f, 0x52, 0x52, 0x45, 0x43, 0x54, 0x5f, 0x55, 0x53,
	0x45, 0x5f, 0x4b, 0x4e, 0x4f, 0x57, 0x4c, 0x45, 0x44, 0x47, 0x45, 0x10, 0x04, 0x12, 0x22, 0x0a,
	0x1e, 0x44, 0x49, 0x53, 0x4c, 0x49, 0x4b, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e,
	0x45, 0x58, 0x50, 0x45, 0x43, 0x54, 0x45, 0x44, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10,
	0x05, 0x12, 0x29, 0x0a, 0x25, 0x44, 0x49, 0x53, 0x4c, 0x49, 0x4b, 0x45, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x55, 0x4e, 0x45, 0x58, 0x50, 0x45, 0x43, 0x54, 0x45, 0x44, 0x5f, 0x47, 0x4f, 0x41,
	0x4c, 0x5f, 0x42, 0x45, 0x48, 0x41, 0x56, 0x49, 0x4f, 0x52, 0x10, 0x06, 0x12, 0x1b, 0x0a, 0x17,
	0x44, 0x49, 0x53, 0x4c, 0x49, 0x4b, 0x45, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x50,
	0x45, 0x54, 0x49, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x07, 0x2a, 0xa9, 0x09, 0x0a, 0x0b, 0x56, 0x6f,
	0x69, 0x63, 0x65, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x12, 0x1c, 0x0a, 0x18, 0x56, 0x4f, 0x49,
	0x43, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x56, 0x4f, 0x49, 0x43, 0x45,
	0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x46, 0x45, 0x4d, 0x41, 0x4c, 0x45, 0x5f, 0x31,
	0x10, 0x01, 0x12, 0x19, 0x0a, 0x15, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x53,
	0x45, 0x54, 0x5f, 0x46, 0x45, 0x4d, 0x41, 0x4c, 0x45, 0x5f, 0x32, 0x10, 0x02, 0x12, 0x19, 0x0a,
	0x15, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x46, 0x45,
	0x4d, 0x41, 0x4c, 0x45, 0x5f, 0x33, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x56, 0x4f, 0x49, 0x43,
	0x45, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x46, 0x45, 0x4d, 0x41, 0x4c, 0x45, 0x5f,
	0x34, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x50, 0x52, 0x45,
	0x53, 0x45, 0x54, 0x5f, 0x46, 0x45, 0x4d, 0x41, 0x4c, 0x45, 0x5f, 0x35, 0x10, 0x05, 0x12, 0x17,
	0x0a, 0x13, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x4d,
	0x41, 0x4c, 0x45, 0x5f, 0x31, 0x10, 0x06, 0x12, 0x17, 0x0a, 0x13, 0x56, 0x4f, 0x49, 0x43, 0x45,
	0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x4d, 0x41, 0x4c, 0x45, 0x5f, 0x32, 0x10, 0x07,
	0x12, 0x17, 0x0a, 0x13, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x54,
	0x5f, 0x4d, 0x41, 0x4c, 0x45, 0x5f, 0x33, 0x10, 0x08, 0x12, 0x17, 0x0a, 0x13, 0x56, 0x4f, 0x49,
	0x43, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x4d, 0x41, 0x4c, 0x45, 0x5f, 0x34,
	0x10, 0x09, 0x12, 0x17, 0x0a, 0x13, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x53,
	0x45, 0x54, 0x5f, 0x4d, 0x41, 0x4c, 0x45, 0x5f, 0x35, 0x10, 0x0a, 0x12, 0x1f, 0x0a, 0x1b, 0x49,
	0x4e, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x50, 0x52, 0x45,
	0x53, 0x45, 0x54, 0x5f, 0x4d, 0x41, 0x4c, 0x45, 0x5f, 0x31, 0x10, 0x0b, 0x12, 0x1f, 0x0a, 0x1b,
	0x49, 0x4e, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x50, 0x52,
	0x45, 0x53, 0x45, 0x54, 0x5f, 0x4d, 0x41, 0x4c, 0x45, 0x5f, 0x32, 0x10, 0x0c, 0x12, 0x21, 0x0a,
	0x1d, 0x49, 0x4e, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x50,
	0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x46, 0x45, 0x4d, 0x41, 0x4c, 0x45, 0x5f, 0x31, 0x10, 0x0d,
	0x12, 0x21, 0x0a, 0x1d, 0x49, 0x4e, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x56, 0x4f, 0x49, 0x43,
	0x45, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x46, 0x45, 0x4d, 0x41, 0x4c, 0x45, 0x5f,
	0x32, 0x10, 0x0e, 0x12, 0x1f, 0x0a, 0x1b, 0x49, 0x4e, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x56,
	0x4f, 0x49, 0x43, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x4d, 0x41, 0x4c, 0x45,
	0x5f, 0x33, 0x10, 0x0f, 0x12, 0x1f, 0x0a, 0x1b, 0x49, 0x4e, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f,
	0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x4d, 0x41, 0x4c,
	0x45, 0x5f, 0x34, 0x10, 0x10, 0x12, 0x1f, 0x0a, 0x1b, 0x49, 0x4e, 0x57, 0x4f, 0x52, 0x4c, 0x44,
	0x5f, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x4d, 0x41,
	0x4c, 0x45, 0x5f, 0x35, 0x10, 0x11, 0x12, 0x21, 0x0a, 0x1d, 0x49, 0x4e, 0x57, 0x4f, 0x52, 0x4c,
	0x44, 0x5f, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x46,
	0x45, 0x4d, 0x41, 0x4c, 0x45, 0x5f, 0x33, 0x10, 0x12, 0x12, 0x21, 0x0a, 0x1d, 0x49, 0x4e, 0x57,
	0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45,
	0x54, 0x5f, 0x46, 0x45, 0x4d, 0x41, 0x4c, 0x45, 0x5f, 0x34, 0x10, 0x13, 0x12, 0x25, 0x0a, 0x21,
	0x49, 0x4e, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x50, 0x52,
	0x45, 0x53, 0x45, 0x54, 0x5f, 0x52, 0x4f, 0x42, 0x4f, 0x54, 0x5f, 0x4d, 0x41, 0x4c, 0x45, 0x5f,
	0x31, 0x10, 0x14, 0x12, 0x25, 0x0a, 0x21, 0x49, 0x4e, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x56,
	0x4f, 0x49, 0x43, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x52, 0x4f, 0x42, 0x4f,
	0x54, 0x5f, 0x4d, 0x41, 0x4c, 0x45, 0x5f, 0x32, 0x10, 0x15, 0x12, 0x25, 0x0a, 0x21, 0x49, 0x4e,
	0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x53,
	0x45, 0x54, 0x5f, 0x52, 0x4f, 0x42, 0x4f, 0x54, 0x5f, 0x4d, 0x41, 0x4c, 0x45, 0x5f, 0x33, 0x10,
	0x16, 0x12, 0x25, 0x0a, 0x21, 0x49, 0x4e, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x56, 0x4f, 0x49,
	0x43, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x52, 0x4f, 0x42, 0x4f, 0x54, 0x5f,
	0x4d, 0x41, 0x4c, 0x45, 0x5f, 0x34, 0x10, 0x17, 0x12, 0x25, 0x0a, 0x21, 0x49, 0x4e, 0x57, 0x4f,
	0x52, 0x4c, 0x44, 0x5f, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x54,
	0x5f, 0x52, 0x4f, 0x42, 0x4f, 0x54, 0x5f, 0x4d, 0x41, 0x4c, 0x45, 0x5f, 0x35, 0x10, 0x18, 0x12,
	0x27, 0x0a, 0x23, 0x49, 0x4e, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x56, 0x4f, 0x49, 0x43, 0x45,
	0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x52, 0x4f, 0x42, 0x4f, 0x54, 0x5f, 0x46, 0x45,
	0x4d, 0x41, 0x4c, 0x45, 0x5f, 0x31, 0x10, 0x19, 0x12, 0x27, 0x0a, 0x23, 0x49, 0x4e, 0x57, 0x4f,
	0x52, 0x4c, 0x44, 0x5f, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x54,
	0x5f, 0x52, 0x4f, 0x42, 0x4f, 0x54, 0x5f, 0x46, 0x45, 0x4d, 0x41, 0x4c, 0x45, 0x5f, 0x32, 0x10,
	0x1a, 0x12, 0x27, 0x0a, 0x23, 0x49, 0x4e, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x56, 0x4f, 0x49,
	0x43, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x52, 0x4f, 0x42, 0x4f, 0x54, 0x5f,
	0x46, 0x45, 0x4d, 0x41, 0x4c, 0x45, 0x5f, 0x33, 0x10, 0x1b, 0x12, 0x27, 0x0a, 0x23, 0x49, 0x4e,
	0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x53,
	0x45, 0x54, 0x5f, 0x52, 0x4f, 0x42, 0x4f, 0x54, 0x5f, 0x46, 0x45, 0x4d, 0x41, 0x4c, 0x45, 0x5f,
	0x34, 0x10, 0x1c, 0x12, 0x1e, 0x0a, 0x1a, 0x49, 0x4e, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x56,
	0x4f, 0x49, 0x43, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x53, 0x50, 0x49, 0x4b,
	0x45, 0x10, 0x1d, 0x12, 0x21, 0x0a, 0x1d, 0x49, 0x4e, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x56,
	0x4f, 0x49, 0x43, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x54, 0x57, 0x49, 0x4c,
	0x49, 0x47, 0x48, 0x54, 0x10, 0x1e, 0x12, 0x23, 0x0a, 0x1f, 0x49, 0x4e, 0x57, 0x4f, 0x52, 0x4c,
	0x44, 0x5f, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x46,
	0x4c, 0x55, 0x54, 0x54, 0x45, 0x52, 0x53, 0x48, 0x59, 0x10, 0x1f, 0x12, 0x24, 0x0a, 0x20, 0x49,
	0x4e, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x50, 0x52, 0x45,
	0x53, 0x45, 0x54, 0x5f, 0x52, 0x4f, 0x42, 0x4f, 0x54, 0x5f, 0x53, 0x50, 0x49, 0x4b, 0x45, 0x10,
	0x20, 0x12, 0x27, 0x0a, 0x23, 0x49, 0x4e, 0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x56, 0x4f, 0x49,
	0x43, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x53, 0x45, 0x54, 0x5f, 0x52, 0x4f, 0x42, 0x4f, 0x54, 0x5f,
	0x54, 0x57, 0x49, 0x4c, 0x49, 0x47, 0x48, 0x54, 0x10, 0x21, 0x12, 0x29, 0x0a, 0x25, 0x49, 0x4e,
	0x57, 0x4f, 0x52, 0x4c, 0x44, 0x5f, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x5f, 0x50, 0x52, 0x45, 0x53,
	0x45, 0x54, 0x5f, 0x52, 0x4f, 0x42, 0x4f, 0x54, 0x5f, 0x46, 0x4c, 0x55, 0x54, 0x54, 0x45, 0x52,
	0x53, 0x48, 0x59, 0x10, 0x22, 0x32, 0xbe, 0x06, 0x0a, 0x0b, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x45,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x12, 0x53, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x21, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x70, 0x61,
	0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x49, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x50, 0x61, 0x63,
	0x6b, 0x65, 0x74, 0x1a, 0x21, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x2e, 0x70, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x73, 0x2e, 0x49, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64,
	0x50, 0x61, 0x63, 0x6b, 0x65, 0x74, 0x28, 0x01, 0x30, 0x01, 0x12, 0x5c, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x12, 0x25, 0x2e, 0x61, 0x69, 0x2e, 0x69,
	0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6c, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x26, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x6f, 0x72, 0x6c, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x56, 0x0a, 0x09, 0x6c, 0x6f, 0x61, 0x64,
	0x53, 0x63, 0x65, 0x6e, 0x65, 0x12, 0x23, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72,
	0x6c, 0x64, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x53, 0x63,
	0x65, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x61, 0x69, 0x2e,
	0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c,
	0x6f, 0x61, 0x64, 0x53, 0x63, 0x65, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x46, 0x0a, 0x08, 0x6c, 0x6f, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x22, 0x2e, 0x61,
	0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65,
	0x2e, 0x4c, 0x6f, 0x67, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x5f, 0x0a, 0x0c, 0x76, 0x6f, 0x69, 0x63,
	0x65, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x12, 0x26, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e,
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x69,
	0x63, 0x65, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x27, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x50, 0x72, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x65, 0x0a, 0x0e, 0x6c, 0x69, 0x73,
	0x74, 0x42, 0x61, 0x73, 0x65, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x12, 0x28, 0x2e, 0x61, 0x69,
	0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x29, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72,
	0x6c, 0x64, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61,
	0x73, 0x65, 0x56, 0x6f, 0x69, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x58, 0x0a, 0x0d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x27, 0x2e, 0x61, 0x69, 0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x69, 0x2e,
	0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x50, 0x0a, 0x0d, 0x70, 0x69,
	0x6e, 0x67, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x12, 0x27, 0x2e, 0x61, 0x69,
	0x2e, 0x69, 0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x50, 0x69, 0x6e, 0x67, 0x43, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x68, 0x0a, 0x19,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x33, 0x2e, 0x61, 0x69, 0x2e, 0x69,
	0x6e, 0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x46,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x2d, 0x5a, 0x2b, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x7a, 0x69, 0x76, 0x6f, 0x79, 0x2f, 0x67, 0x6f, 0x2d, 0x69, 0x6e,
	0x77, 0x6f, 0x72, 0x6c, 0x64, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x42, 0x75, 0x66, 0x2f, 0x65,
	0x6e, 0x67, 0x69, 0x6e, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_world_engine_proto_rawDescOnce sync.Once
	file_world_engine_proto_rawDescData = file_world_engine_proto_rawDesc
)

func file_world_engine_proto_rawDescGZIP() []byte {
	file_world_engine_proto_rawDescOnce.Do(func() {
		file_world_engine_proto_rawDescData = protoimpl.X.CompressGZIP(file_world_engine_proto_rawDescData)
	})
	return file_world_engine_proto_rawDescData
}

var file_world_engine_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_world_engine_proto_msgTypes = make([]protoimpl.MessageInfo, 30)
var file_world_engine_proto_goTypes = []interface{}{
	(InteractionDislikeType)(0),                     // 0: ai.inworld.engine.InteractionDislikeType
	(VoicePreset)(0),                                // 1: ai.inworld.engine.VoicePreset
	(PreviousDialog_DialogParticipant)(0),           // 2: ai.inworld.engine.PreviousDialog.DialogParticipant
	(*InteractionFeedback)(nil),                     // 3: ai.inworld.engine.InteractionFeedback
	(*CreateInteractionFeedbackRequest)(nil),        // 4: ai.inworld.engine.CreateInteractionFeedbackRequest
	(*PingCharacterRequest)(nil),                    // 5: ai.inworld.engine.PingCharacterRequest
	(*CapabilitiesRequest)(nil),                     // 6: ai.inworld.engine.CapabilitiesRequest
	(*UserRequest)(nil),                             // 7: ai.inworld.engine.UserRequest
	(*ClientRequest)(nil),                           // 8: ai.inworld.engine.ClientRequest
	(*CreateWorldRequest)(nil),                      // 9: ai.inworld.engine.CreateWorldRequest
	(*CreateWorldResponse)(nil),                     // 10: ai.inworld.engine.CreateWorldResponse
	(*LoadSceneRequest)(nil),                        // 11: ai.inworld.engine.LoadSceneRequest
	(*AudioSettings)(nil),                           // 12: ai.inworld.engine.AudioSettings
	(*UserSettings)(nil),                            // 13: ai.inworld.engine.UserSettings
	(*SessionContinuation)(nil),                     // 14: ai.inworld.engine.SessionContinuation
	(*PreviousDialog)(nil),                          // 15: ai.inworld.engine.PreviousDialog
	(*PreviousState)(nil),                           // 16: ai.inworld.engine.PreviousState
	(*LoadSceneResponse)(nil),                       // 17: ai.inworld.engine.LoadSceneResponse
	(*LogErrorRequest)(nil),                         // 18: ai.inworld.engine.LogErrorRequest
	(*VoicePreviewRequest)(nil),                     // 19: ai.inworld.engine.VoicePreviewRequest
	(*VoicePreviewResponse)(nil),                    // 20: ai.inworld.engine.VoicePreviewResponse
	(*ListBaseVoicesRequest)(nil),                   // 21: ai.inworld.engine.ListBaseVoicesRequest
	(*ListBaseVoicesResponse)(nil),                  // 22: ai.inworld.engine.ListBaseVoicesResponse
	(*AccessToken)(nil),                             // 23: ai.inworld.engine.AccessToken
	(*GenerateTokenRequest)(nil),                    // 24: ai.inworld.engine.GenerateTokenRequest
	(*CreateWorldRequest_CreateAgentRequest)(nil),   // 25: ai.inworld.engine.CreateWorldRequest.CreateAgentRequest
	(*CreateWorldResponse_Agent)(nil),               // 26: ai.inworld.engine.CreateWorldResponse.Agent
	(*SessionContinuation_ContinuationInfo)(nil),    // 27: ai.inworld.engine.SessionContinuation.ContinuationInfo
	(*PreviousDialog_Phrase)(nil),                   // 28: ai.inworld.engine.PreviousDialog.Phrase
	(*PreviousState_StateHolder)(nil),               // 29: ai.inworld.engine.PreviousState.StateHolder
	(*LoadSceneResponse_Agent)(nil),                 // 30: ai.inworld.engine.LoadSceneResponse.Agent
	(*LoadSceneResponse_Agent_CharacterAssets)(nil), // 31: ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets
	(*ListBaseVoicesResponse_BaseVoice)(nil),        // 32: ai.inworld.engine.ListBaseVoicesResponse.BaseVoice
	(*packets.EmotionEvent)(nil),                    // 33: ai.inworld.packets.EmotionEvent
	(*voices.Voice)(nil),                            // 34: ai.inworld.voices.Voice
	(voices.TTSType)(0),                             // 35: ai.inworld.voices.TTSType
	(*timestamppb.Timestamp)(nil),                   // 36: google.protobuf.Timestamp
	(*packets.InworldPacket)(nil),                   // 37: ai.inworld.packets.InworldPacket
	(voices.Gender)(0),                              // 38: ai.inworld.voices.Gender
	(*emptypb.Empty)(nil),                           // 39: google.protobuf.Empty
}
var file_world_engine_proto_depIdxs = []int32{
	0,  // 0: ai.inworld.engine.InteractionFeedback.typeList:type_name -> ai.inworld.engine.InteractionDislikeType
	3,  // 1: ai.inworld.engine.CreateInteractionFeedbackRequest.feedback:type_name -> ai.inworld.engine.InteractionFeedback
	25, // 2: ai.inworld.engine.CreateWorldRequest.createAgentRequestsList:type_name -> ai.inworld.engine.CreateWorldRequest.CreateAgentRequest
	6,  // 3: ai.inworld.engine.CreateWorldRequest.capabilities:type_name -> ai.inworld.engine.CapabilitiesRequest
	7,  // 4: ai.inworld.engine.CreateWorldRequest.user:type_name -> ai.inworld.engine.UserRequest
	8,  // 5: ai.inworld.engine.CreateWorldRequest.client:type_name -> ai.inworld.engine.ClientRequest
	26, // 6: ai.inworld.engine.CreateWorldResponse.agentsList:type_name -> ai.inworld.engine.CreateWorldResponse.Agent
	6,  // 7: ai.inworld.engine.LoadSceneRequest.capabilities:type_name -> ai.inworld.engine.CapabilitiesRequest
	7,  // 8: ai.inworld.engine.LoadSceneRequest.user:type_name -> ai.inworld.engine.UserRequest
	8,  // 9: ai.inworld.engine.LoadSceneRequest.client:type_name -> ai.inworld.engine.ClientRequest
	12, // 10: ai.inworld.engine.LoadSceneRequest.audioSettings:type_name -> ai.inworld.engine.AudioSettings
	13, // 11: ai.inworld.engine.LoadSceneRequest.userSettings:type_name -> ai.inworld.engine.UserSettings
	14, // 12: ai.inworld.engine.LoadSceneRequest.sessionContinuation:type_name -> ai.inworld.engine.SessionContinuation
	27, // 13: ai.inworld.engine.SessionContinuation.continuationInfo:type_name -> ai.inworld.engine.SessionContinuation.ContinuationInfo
	15, // 14: ai.inworld.engine.SessionContinuation.previousDialog:type_name -> ai.inworld.engine.PreviousDialog
	28, // 15: ai.inworld.engine.PreviousDialog.phrasesList:type_name -> ai.inworld.engine.PreviousDialog.Phrase
	29, // 16: ai.inworld.engine.PreviousState.stateHolderList:type_name -> ai.inworld.engine.PreviousState.StateHolder
	30, // 17: ai.inworld.engine.LoadSceneResponse.agentsList:type_name -> ai.inworld.engine.LoadSceneResponse.Agent
	33, // 18: ai.inworld.engine.VoicePreviewRequest.emotions:type_name -> ai.inworld.packets.EmotionEvent
	34, // 19: ai.inworld.engine.VoicePreviewRequest.voice:type_name -> ai.inworld.voices.Voice
	35, // 20: ai.inworld.engine.ListBaseVoicesRequest.ttsTypesList:type_name -> ai.inworld.voices.TTSType
	32, // 21: ai.inworld.engine.ListBaseVoicesResponse.googlevoicesList:type_name -> ai.inworld.engine.ListBaseVoicesResponse.BaseVoice
	32, // 22: ai.inworld.engine.ListBaseVoicesResponse.inworldvoicesList:type_name -> ai.inworld.engine.ListBaseVoicesResponse.BaseVoice
	36, // 23: ai.inworld.engine.AccessToken.expirationTime:type_name -> google.protobuf.Timestamp
	1,  // 24: ai.inworld.engine.CreateWorldRequest.CreateAgentRequest.voicePreset:type_name -> ai.inworld.engine.VoicePreset
	2,  // 25: ai.inworld.engine.PreviousDialog.Phrase.talker:type_name -> ai.inworld.engine.PreviousDialog.DialogParticipant
	15, // 26: ai.inworld.engine.PreviousState.StateHolder.previousDialog:type_name -> ai.inworld.engine.PreviousDialog
	37, // 27: ai.inworld.engine.PreviousState.StateHolder.packetList:type_name -> ai.inworld.packets.InworldPacket
	31, // 28: ai.inworld.engine.LoadSceneResponse.Agent.characterAssets:type_name -> ai.inworld.engine.LoadSceneResponse.Agent.CharacterAssets
	38, // 29: ai.inworld.engine.ListBaseVoicesResponse.BaseVoice.gender:type_name -> ai.inworld.voices.Gender
	37, // 30: ai.inworld.engine.WorldEngine.session:input_type -> ai.inworld.packets.InworldPacket
	9,  // 31: ai.inworld.engine.WorldEngine.createWorld:input_type -> ai.inworld.engine.CreateWorldRequest
	11, // 32: ai.inworld.engine.WorldEngine.loadScene:input_type -> ai.inworld.engine.LoadSceneRequest
	18, // 33: ai.inworld.engine.WorldEngine.logError:input_type -> ai.inworld.engine.LogErrorRequest
	19, // 34: ai.inworld.engine.WorldEngine.voicePreview:input_type -> ai.inworld.engine.VoicePreviewRequest
	21, // 35: ai.inworld.engine.WorldEngine.listBaseVoices:input_type -> ai.inworld.engine.ListBaseVoicesRequest
	24, // 36: ai.inworld.engine.WorldEngine.generateToken:input_type -> ai.inworld.engine.GenerateTokenRequest
	5,  // 37: ai.inworld.engine.WorldEngine.pingCharacter:input_type -> ai.inworld.engine.PingCharacterRequest
	4,  // 38: ai.inworld.engine.WorldEngine.createInteractionFeedback:input_type -> ai.inworld.engine.CreateInteractionFeedbackRequest
	37, // 39: ai.inworld.engine.WorldEngine.session:output_type -> ai.inworld.packets.InworldPacket
	10, // 40: ai.inworld.engine.WorldEngine.createWorld:output_type -> ai.inworld.engine.CreateWorldResponse
	17, // 41: ai.inworld.engine.WorldEngine.loadScene:output_type -> ai.inworld.engine.LoadSceneResponse
	39, // 42: ai.inworld.engine.WorldEngine.logError:output_type -> google.protobuf.Empty
	20, // 43: ai.inworld.engine.WorldEngine.voicePreview:output_type -> ai.inworld.engine.VoicePreviewResponse
	22, // 44: ai.inworld.engine.WorldEngine.listBaseVoices:output_type -> ai.inworld.engine.ListBaseVoicesResponse
	23, // 45: ai.inworld.engine.WorldEngine.generateToken:output_type -> ai.inworld.engine.AccessToken
	39, // 46: ai.inworld.engine.WorldEngine.pingCharacter:output_type -> google.protobuf.Empty
	39, // 47: ai.inworld.engine.WorldEngine.createInteractionFeedback:output_type -> google.protobuf.Empty
	39, // [39:48] is the sub-list for method output_type
	30, // [30:39] is the sub-list for method input_type
	30, // [30:30] is the sub-list for extension type_name
	30, // [30:30] is the sub-list for extension extendee
	0,  // [0:30] is the sub-list for field type_name
}

func init() { file_world_engine_proto_init() }
func file_world_engine_proto_init() {
	if File_world_engine_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_world_engine_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InteractionFeedback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_engine_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateInteractionFeedbackRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_engine_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PingCharacterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_engine_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CapabilitiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_engine_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_engine_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_engine_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWorldRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_engine_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWorldResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_engine_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadSceneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_engine_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_engine_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserSettings); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_engine_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionContinuation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_engine_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreviousDialog); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_engine_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreviousState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_engine_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadSceneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_engine_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogErrorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_engine_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoicePreviewRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_engine_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoicePreviewResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_engine_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBaseVoicesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_engine_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBaseVoicesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_engine_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AccessToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_engine_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GenerateTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_engine_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWorldRequest_CreateAgentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_engine_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWorldResponse_Agent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_engine_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionContinuation_ContinuationInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_engine_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreviousDialog_Phrase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_engine_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreviousState_StateHolder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_engine_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadSceneResponse_Agent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_engine_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadSceneResponse_Agent_CharacterAssets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_world_engine_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListBaseVoicesResponse_BaseVoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_world_engine_proto_msgTypes[1].OneofWrappers = []interface{}{}
	file_world_engine_proto_msgTypes[6].OneofWrappers = []interface{}{}
	file_world_engine_proto_msgTypes[8].OneofWrappers = []interface{}{}
	file_world_engine_proto_msgTypes[14].OneofWrappers = []interface{}{}
	file_world_engine_proto_msgTypes[16].OneofWrappers = []interface{}{}
	file_world_engine_proto_msgTypes[20].OneofWrappers = []interface{}{}
	file_world_engine_proto_msgTypes[26].OneofWrappers = []interface{}{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_world_engine_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   30,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_world_engine_proto_goTypes,
		DependencyIndexes: file_world_engine_proto_depIdxs,
		EnumInfos:         file_world_engine_proto_enumTypes,
		MessageInfos:      file_world_engine_proto_msgTypes,
	}.Build()
	File_world_engine_proto = out.File
	file_world_engine_proto_rawDesc = nil
	file_world_engine_proto_goTypes = nil
	file_world_engine_proto_depIdxs = nil
}
